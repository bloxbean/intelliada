<idea-plugin>
    <id>com.bloxbean.intelliada</id>
    <name>IntelliAda Cardano Integration</name>
    <vendor email="info@bloxbean.com" url="https://github.com/bloxbean/intelliada/">BloxBean IntelliAda Project
    </vendor>

    <description><![CDATA[
    <p>Adds support for <a href="https://cardano.org/">Cardano</a>, a proof-of-stake blockchain platform.</p>
    <p>The plugin provides features like transaction submission, token minting, account management.</p>
    <p><a href="https://intelliada.bloxbean.com">Documentation</a>
    ]]></description>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.redhat.devtools.lsp4ij</depends>
    <depends>com.intellij.modules.lang</depends>

    <extensions defaultExtensionNs="com.intellij">

        <toolWindow id="Cardano"
                    anchor="right"
                    factoryClass="com.bloxbean.intelliada.idea.toolwindow.CardanoToolWindowFactory"/>

        <toolWindow id="Cardano Log"
                    anchor="bottom"
                    factoryClass="com.bloxbean.intelliada.idea.toolwindow.CardanoLogToolWindowFactory"/>
        <projectService serviceImplementation="com.bloxbean.intelliada.idea.toolwindow.CardanoConsole"/>

        <applicationService serviceImplementation="com.bloxbean.intelliada.idea.configuration.service.RemoteNodeState"/>
        <applicationService
                serviceImplementation="com.bloxbean.intelliada.idea.configuration.service.CLIProvidersState"/>

        <fileType
                name="Aiken File"
                implementationClass="com.bloxbean.intelliada.idea.aiken.lang.AikenFileType"
                fieldName="INSTANCE"
                language="Aiken"
                extensions="ak"/>

        <fileType
                name="Aiken Project File"
                implementationClass="com.bloxbean.intelliada.idea.aiken.filetypes.AikenTomlFileType"
                fieldName="INSTANCE"
                fileNames="aiken"
                extensions="toml"/>

        <lang.parserDefinition language="Aiken" implementationClass="com.bloxbean.intelliada.idea.aiken.lang.AikenParserDefinition"/>
        <lang.syntaxHighlighter language="Aiken" implementationClass="com.bloxbean.intelliada.idea.aiken.highlight.AikenHighlighter"/>
        <highlightErrorFilter
                implementation="com.bloxbean.intelliada.idea.aiken.highlight.ParseErrorHighlightFilter" />

<!--        <moduleType id="Aiken_Module" implementationClass="com.bloxbean.intelliada.idea.aiken.module.AikenModuleType"/>-->
        <moduleBuilder builderClass="com.bloxbean.intelliada.idea.aiken.module.AikenModuleBuilder"/>

        <projectOpenProcessor implementation="com.bloxbean.intelliada.idea.aiken.module.project.AikenProjectOpenProcessor"/>
        <directoryProjectGenerator implementation="com.bloxbean.intelliada.idea.aiken.module.project.AikenDirectoryProjectGenerator" order="first"/>

        <projectService serviceImplementation="com.bloxbean.intelliada.idea.aiken.module.pkg.AikenTomlService"/>

        <applicationService serviceImplementation="com.bloxbean.intelliada.idea.aiken.configuration.service.AikenSDKState"/>
        <projectService serviceImplementation="com.bloxbean.intelliada.idea.aiken.configuration.service.AikenProjectState"/>

        <!-- Aiken Templates -->
        <internalFileTemplate name="Aiken.Empty"/>
        <internalFileTemplate name="Aiken.Hello World"/>

        <lang.foldingBuilder language="Aiken"
                             implementationClass="com.redhat.devtools.lsp4ij.features.foldingRange.LSPFoldingRangeBuilder"
                             order="first"/>

        <codeInsight.parameterInfo
                language="Aiken"
                implementationClass="com.redhat.devtools.lsp4ij.features.signatureHelp.LSPParameterInfoHandler"/>

        <completion.contributor implementationClass="com.redhat.devtools.lsp4ij.features.completion.LSPCompletionContributor"
                                        id="com.redhat.devtools.lsp4ij.features.completion.LSPCompletionContributor" language="Aiken"/>

        <lang.commenter
                language="Aiken"
                implementationClass="com.bloxbean.intelliada.idea.aiken.comment.AikenCommenter"/>

        <lang.foldingBuilder language="Aiken"
                        implementationClass="com.bloxbean.intelliada.idea.aiken.folding.AikenFolderingBuilder"/>

        <lang.braceMatcher language="Aiken"
                           implementationClass="com.bloxbean.intelliada.idea.aiken.folding.AikenPairedBraceMatcher"/>
<!--        <lang.formatter language="Aiken"-->
<!--                        implementationClass="com.bloxbean.intelliada.idea.aiken.formatter.SimpleFormattingModuleBuilder"/>-->
    </extensions>

    <extensions defaultExtensionNs="com.redhat.devtools.lsp4ij">
        <server id="aikenLanguageServerId"
                name="Aiken Language Server"
                factoryClass="com.bloxbean.intelliada.idea.aiken.AikenLanguageServerFactory">
            <description><![CDATA[
            <p>Aiken Language Server</p>
        ]]>
            </description>
        </server>
        <languageMapping language="Aiken"
                         serverId="aikenLanguageServerId" />
    </extensions>

    <actions>
        <group id="com.bloxbean.intelliada.idea.aiken.action.AikenActionGroup" class="com.bloxbean.intelliada.idea.aiken.action.AikenActionGroup"
               popup="true"
               text="Aiken" description="Aiken">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </group>

        <action id="Aiken.NewAikenFile" class="com.bloxbean.intelliada.idea.aiken.action.NewAikenFileAction"
                text="Aiken File" description="Create new Aikon file">
            <add-to-group group-id="NewGroup" anchor="first" />
        </action>
        <action id="com.bloxbean.intelliada.idea.aiken.compile.action.AikenBuildAction" class="com.bloxbean.intelliada.idea.aiken.compile.action.AikenBuildAction" text="Build"
                description="Build Aiken Project">
            <add-to-group group-id="com.bloxbean.intelliada.idea.aiken.action.AikenActionGroup" anchor="first"/>
        </action>
        <action id="com.bloxbean.intelliada.idea.aiken.compile.action.AikenFormatAction" class="com.bloxbean.intelliada.idea.aiken.compile.action.AikenFormatAction" text="Format Code"
                description="Format Aiken Code">
            <add-to-group group-id="com.bloxbean.intelliada.idea.aiken.action.AikenActionGroup" />
        </action>
        <action id="com.bloxbean.intelliada.idea.aiken.configuration.AikenConfigurationAction" class="com.bloxbean.intelliada.idea.aiken.configuration.AikenConfigurationAction" text="Configuration"
                description="Configure Aiken">
            <add-to-group group-id="com.bloxbean.intelliada.idea.aiken.action.AikenActionGroup" anchor="last"/>
        </action>
    </actions>
    <applicationListeners>

    </applicationListeners>
</idea-plugin>
