openapi: 3.0.0
info:
  contact:
    email: contact@blockfrost.io
    name: Blockfrost Team
    url: https://blockfrost.io
  description: "Blockfrost is an API as a service that allows users to interact with\
    \ the Cardano blockchain and parts of its ecosystem.\n\n## Authentication\n\n\
    After signing up on https://blockfrost.io, a `project_id` token is automatically\
    \ generated for each project.\nHTTP header of your request MUST include this `project_id`\
    \ in order to authenticate against Blockfrost servers.\n\n## Available networks\n\
    \nAt the moment, you can use the following networks. Please, note that each network\
    \ has its own `project_id`.\n\n<table>\n  <tr><td><b>Network</b></td><td><b>Endpoint</b></td></tr>\n\
    \  <tr><td>Cardano mainnet</td><td><tt>https://cardano-mainnet.blockfrost.io/api/v0</td></tt></tr>\n\
    \  <tr><td>Cardano testnet</td><td><tt>https://cardano-testnet.blockfrost.io/api/v0</tt></td></tr>\n\
    \  <tr><td>InterPlanetary File System</td><td><tt>https://ipfs.blockfrost.io/api/v0</tt></td></tr>\n\
    </table>\n\n## Concepts\n\n* All endpoints return either a JSON object or an array.\n\
    * Data is returned in *ascending* (oldest first, newest last) order.\n  * You\
    \ might use the `?order=desc` query parameter to reverse this order.\n* By default,\
    \ we return 100 results at a time. You have to use `?page=2` to list through the\
    \ results.\n* All time and timestamp related fields are in milliseconds of UNIX\
    \ time.\n* All amounts are returned in Lovelaces, where 1 ADA = 1 000 000 Lovelaces.\n\
    * Addresses, accounts and pool IDs are in Bech32 format.\n* All values are case\
    \ sensitive.\n* All hex encoded values are lower case.\n* Examples are not based\
    \ on real data. Any resemblance to actual events is purely coincidental.\n* We\
    \ allow to upload files up to 100MB of size to IPFS. This might increase in the\
    \ future.\n\n## Errors\n\n### HTTP Status codes\n\nThe following are HTTP status\
    \ code your application might receive when reaching Blockfrost endpoints and\n\
    it should handle all of these cases.\n\n* HTTP `400` return code is used when\
    \ the request is not valid.\n* HTTP `402` return code is used when the projects\
    \ exceed their daily request limit.\n* HTTP `403` return code is used when the\
    \ request is not authenticated.\n* HTTP `404` return code is used when the resource\
    \ doesn't exist.\n* HTTP `418` return code is used when the user has been auto-banned\
    \ for flooding too much after previously receiving error code `402` or `429`.\n\
    * HTTP `429` return code is used when the user has sent too many requests in a\
    \ given amount of time and therefore has been rate-limited.\n* HTTP `500` return\
    \ code is used when our endpoints are having a problem.\n\n### Error codes\n\n\
    An internal error code number is used for better indication of the error in question.\
    \ It is passed using the following payload.\n\n```json\n{\n  \"status_code\":\
    \ 403,\n  \"error\": \"Forbidden\",\n  \"message\": \"Invalid project token.\"\
    \n}\n```\n## Limits\n\n There are two types of limits we are enforcing. The first\
    \ depends on your plan and is the number of request we allow per day. We defined\n\
    \ the day from midnight to midnight of UTC time. The second is rate limiting,\
    \ where we limit an end user to 10 requests per second after a period\n of 5 second\
    \ burst. We believe this should be sufficient for most of the use cases. If it\
    \ is not and you have a specific use case, please get in touch with us, and\n\
    \ we will make sure to take it into account as much as we can.\n\n# Authentication\n\
    \n<!-- ReDoc-Inject: <security-definitions> -->"
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://blockfrost.io/terms
  title: Blockfrost.io ~ API Documentation
  version: 0.1.11
  x-logo:
    url: https://staging.blockfrost.io/images/logo.svg
    altText: Blockfrost
servers:
- description: Cardano Mainnet network
  url: https://cardano-mainnet.blockfrost.io/api/v0/
- description: Cardano Testnet network
  url: https://cardano-testnet.blockfrost.io/api/v0/
- description: local
  url: https://localhost:3000
security:
- ApiKeyAuth: []
tags:
- name: Health
- name: Metrics
- name: Cardano » Accounts
- name: Cardano » Addresses
- name: Cardano » Assets
- name: Cardano » Blocks
- name: Cardano » Epochs
- name: Cardano » Ledger
- name: Cardano » Metadata
- name: Cardano » Pools
- name: Cardano » Transactions
- name: IPFS » Add
- name: IPFS » Gateway
- name: IPFS » Pins
paths:
  /:
    get:
      description: |
        Root endpoint has no other function than to point end users to documentation.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Information pointing to the documentation.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      security: []
      summary: Root endpoint
      tags:
      - Health
      x-accepts: application/json
  /health:
    get:
      description: |
        Return backend status as a boolean. Your application
            should handle situations when backend for the given chain is unavailable.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Return the boolean indicating the health of the backend.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      security: []
      summary: Backend health status
      tags:
      - Health
      x-accepts: application/json
  /health/clock:
    get:
      description: |
        This endpoint provides the current UNIX time. Your application might
        use this to verify if the client clock is not out of sync.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: Return the current UNIX time in milliseconds.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      security: []
      summary: Current backend time
      tags:
      - Health
      x-accepts: application/json
  /blocks/latest:
    get:
      description: "Return the latest block available to the backends, also known\
        \ as the\ntip of the blockchain.\n"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block_content'
          description: Return the contents of the latest block.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Latest block
      tags:
      - Cardano » Blocks
      x-accepts: application/json
  /blocks/{hash_or_number}:
    get:
      description: |
        Return the content of a requested block.
      parameters:
      - description: Hash of the requested block.
        example: 4ea1ba291e8eef538635a53e59fddba7810d1679631cc3aed7c8e6c4091a516a
        explode: false
        in: path
        name: hash_or_number
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string or block number.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block_content'
          description: Return the contents of the block
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Specific block
      tags:
      - Cardano » Blocks
      x-accepts: application/json
  /blocks/{hash_or_number}/next:
    get:
      description: |
        Return the list of blocks following a specific block.
      parameters:
      - description: Hash of the requested block.
        example: 5ea1ba291e8eef538635a53e59fddba7810d1679631cc3aed7c8e6c4091a516a
        explode: false
        in: path
        name: hash_or_number
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string or block number.
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block_content_array'
          description: Return the contents of the block.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Listing of next blocks
      tags:
      - Cardano » Blocks
      x-accepts: application/json
  /blocks/{hash_or_number}/previous:
    get:
      description: |
        Return the list of blocks preceding a specific block.
      parameters:
      - description: Hash of the requested block
        example: "4873401"
        explode: false
        in: path
        name: hash_or_number
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string or block number.
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block_content_array'
          description: Return the contents of the block
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Listing of previous blocks
      tags:
      - Cardano » Blocks
      x-accepts: application/json
  /blocks/{hash_or_number}/txs:
    get:
      description: Return the transactions within the block.
      parameters:
      - description: Hash of the requested block.
        example: "4873401"
        explode: false
        in: path
        name: hash_or_number
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string or block number.
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "Ordered by tx index in the block.\nThe ordering of items from\
          \ the point of view of the blockchain,\nnot the page listing itself. By\
          \ default, we return oldest first, newest last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/block_content_txs'
          description: Return the transactions within the block.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Block transactions
      tags:
      - Cardano » Blocks
      x-accepts: application/json
  /genesis:
    get:
      description: Return the information about blockchain genesis.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genesis_content'
          description: Return the genesis parameters.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Blockchain genesis
      tags:
      - Cardano » Ledger
      x-accepts: application/json
  /epochs/latest:
    get:
      description: "Return the information about the latest, therefore current, epoch."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epoch_content'
          description: Return the data about the epoch
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Latest epoch
      tags:
      - Cardano » Epochs
      x-accepts: application/json
  /epochs/{number}:
    get:
      description: Return the content of the requested epoch.
      parameters:
      - description: Number of the epoch
        example: "225"
        explode: false
        in: path
        name: number
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epoch_content'
          description: Return the epoch data.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Specific epoch
      tags:
      - Cardano » Epochs
      x-accepts: application/json
  /epochs/{number}/next:
    get:
      description: Return the list of epochs following a specific epoch.
      parameters:
      - description: Number of the requested epoch.
        example: 225
        explode: false
        in: path
        name: number
        required: true
        schema:
          type: integer
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epoch_content_array'
          description: Return the data about the epoch
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Listing of next epochs
      tags:
      - Cardano » Epochs
      x-accepts: application/json
  /epochs/{number}/previous:
    get:
      description: Return the list of epochs preceding a specific epoch.
      parameters:
      - description: Number of the epoch
        example: 225
        explode: false
        in: path
        name: number
        required: true
        schema:
          type: integer
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epoch_content_array'
          description: Return the epoch data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Listing of previous epochs
      tags:
      - Cardano » Epochs
      x-accepts: application/json
  /epochs/{number}/stakes:
    get:
      description: Return the active stake distribution for the epoch specified.
      parameters:
      - description: Number of the epoch
        example: 225
        explode: false
        in: path
        name: number
        required: true
        schema:
          type: integer
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epoch_stake_content'
          description: Return the data about the epoch
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Stake distribution
      tags:
      - Cardano » Epochs
      x-accepts: application/json
  /epochs/{number}/stakes/{pool_id}:
    get:
      description: Return the active stake distribution for the epoch specified by
        stake pool.
      parameters:
      - description: Number of the epoch
        example: 225
        explode: false
        in: path
        name: number
        required: true
        schema:
          type: integer
        style: simple
      - description: Stake pool ID to filter
        example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epoch_stake_pool_content'
          description: Return the data about the epoch
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Stake distribution by pool
      tags:
      - Cardano » Epochs
      x-accepts: application/json
  /epochs/{number}/blocks:
    get:
      description: Return the blocks minted for the epoch specified.
      parameters:
      - description: Number of the epoch
        example: 225
        explode: false
        in: path
        name: number
        required: true
        schema:
          type: integer
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epoch_block_content'
          description: Return the data about the epoch
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Block distribution
      tags:
      - Cardano » Epochs
      x-accepts: application/json
  /epochs/{number}/blocks/{pool_id}:
    get:
      description: Return the block minted for the epoch specified by stake pool.
      parameters:
      - description: Number of the epoch
        example: 225
        explode: false
        in: path
        name: number
        required: true
        schema:
          type: integer
        style: simple
      - description: Stake pool ID to filter
        example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epoch_block_content'
          description: Return the data about the epoch
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Block distribution
      tags:
      - Cardano » Epochs
      x-accepts: application/json
  /epochs/{number}/parameters:
    get:
      description: Return the protocol parameters for the epoch specified.
      parameters:
      - description: Number of the epoch
        example: 225
        explode: false
        in: path
        name: number
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/epoch_param_content'
          description: Return the data about the epoch
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Protocol parameters
      tags:
      - Cardano » Epochs
      x-accepts: application/json
  /txs/{hash}:
    get:
      description: Return content of the requested transaction.
      parameters:
      - description: Hash of the requested transaction
        example: 6e5f825c42c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b
        explode: false
        in: path
        name: hash
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_content'
          description: Return the contents of the transaction.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Specific transaction
      tags:
      - Cardano » Transactions
      x-accepts: application/json
  /txs/{hash}/utxos:
    get:
      description: Return the inputs and UTXOs of the specific transaction.
      parameters:
      - description: Hash of the requested transaction
        example: 6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b
        explode: false
        in: path
        name: hash
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_content_utxo'
          description: Return the contents of the transaction.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Transaction UTXOs
      tags:
      - Cardano » Transactions
      x-accepts: application/json
  /txs/{hash}/stakes:
    get:
      description: |
        Obtain information about (de)registration of stake addresses within a transaction.
      parameters:
      - description: Hash of the requested transaction.
        example: 6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b
        explode: false
        in: path
        name: hash
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tx_content_stake_addr'
                type: array
          description: |
            Obtain information about (de)registration of stake addresses within a transaction.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Transaction stake addresses certificates
      tags:
      - Cardano » Transactions
      x-accepts: application/json
  /txs/{hash}/delegations:
    get:
      description: |
        Obtain information about delegation certificates of a specific transaction.
      parameters:
      - description: Hash of the requested transaction.
        example: 6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b
        explode: false
        in: path
        name: hash
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tx_content_delegations'
                type: array
          description: Obtain information about delegation certificates of a specific
            transaction
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Transaction delegation certificates
      tags:
      - Cardano » Transactions
      x-accepts: application/json
  /txs/{hash}/withdrawals:
    get:
      description: Obtain information about withdrawals of a specific transaction.
      parameters:
      - description: Hash of the requested transaction.
        example: 6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b
        explode: false
        in: path
        name: hash
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tx_content_withdrawals'
                type: array
          description: Obtain information about withdrawals of a specific transaction.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Transaction withdrawal
      tags:
      - Cardano » Transactions
      x-accepts: application/json
  /txs/{hash}/pool_updates:
    get:
      description: |
        Obtain information about stake pool registration and update certificates of a specific transaction.
      parameters:
      - description: Hash of the requested transaction
        example: 6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b
        explode: false
        in: path
        name: hash
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tx_content_pool_certs'
                type: array
          description: Obtain information about stake pool certificates of a specific
            transaction
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Transaction stake pool registration and update certificates
      tags:
      - Cardano » Transactions
      x-accepts: application/json
  /txs/{hash}/pool_retires:
    get:
      description: |
        Obtain information about stake pool retirements within a specific transaction.
      parameters:
      - description: Hash of the requested transaction
        example: 6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b
        explode: false
        in: path
        name: hash
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tx_content_pool_retires'
                type: array
          description: |
            Obtain information about stake pool retirements within a specific transaction.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Transaction stake pool retirement certificates
      tags:
      - Cardano » Transactions
      x-accepts: application/json
  /txs/{hash}/metadata:
    get:
      description: Obtain the transaction metadata.
      parameters:
      - description: Hash of the requested transaction
        example: 6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b
        explode: false
        in: path
        name: hash
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_content_metadata'
          description: Obtain information about stake pool retirements within a specific
            transaction.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Transaction metadata
      tags:
      - Cardano » Transactions
      x-accepts: application/json
  /txs/{hash}/metadata/cbor:
    get:
      description: Obtain the transaction metadata in CBOR.
      parameters:
      - description: Hash of the requested transaction
        example: 6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b
        explode: false
        in: path
        name: hash
        required: true
        schema:
          format: 64-character case-sensitive hexadecimal string.
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_content_metadata_cbor'
          description: Obtain information about stake pool retirements within a specific
            transaction.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Transaction metadata in CBOR
      tags:
      - Cardano » Transactions
      x-accepts: application/json
  /tx/submit:
    post:
      description: Submit an already serialized transaction to the network.
      parameters:
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - application/cbor
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                example: d1662b24fa9fe985fc2dce47455df399cb2e31e1e1819339e885801cc3578908
                format: hex
                maxLength: 64
                minLength: 64
                type: string
          description: Return the ID of the submitted transaction.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Submit a transaction
      tags:
      - Cardano » Transactions
      x-code-samples:
      - lang: Shell
        label: cURL
        source: "# Assuming `data` is a serialized transaction on the file-system.\n\
          curl \"https://cardano-mainnet.blockfrost.io/api/v0/tx/submit\" \\\n  -X\
          \ POST \\\n  -H \"Content-Type: application/cbor\" \\\n  -H \"project_id:\
          \ $PROJECT_ID\" \\\n  --data-binary @./data\n"
      x-accepts: application/json
  /accounts/{stake_address}:
    get:
      description: |
        Obtain information about a specific stake account.
      parameters:
      - description: Bech32 stake address.
        example: stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc
        explode: false
        in: path
        name: stake_address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_content'
          description: Return the account content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Specific account address
      tags:
      - Cardano » Accounts
      x-accepts: application/json
  /accounts/{stake_address}/rewards:
    get:
      description: |
        Obtain information about the history of a specific account.
      parameters:
      - description: Bech32 stake address.
        example: stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc
        explode: false
        in: path
        name: stake_address
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_reward_content'
          description: Return the account content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Account reward history
      tags:
      - Cardano » Accounts
      x-accepts: application/json
  /accounts/{stake_address}/history:
    get:
      description: |
        Obtain information about the history of a specific account.
      parameters:
      - description: Bech32 stake address.
        example: stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc
        explode: false
        in: path
        name: stake_address
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_history_content'
          description: Return the account content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Account history
      tags:
      - Cardano » Accounts
      x-accepts: application/json
  /accounts/{stake_address}/delegations:
    get:
      description: Obtain information about the delegation of a specific account.
      parameters:
      - description: Bech32 stake address.
        example: stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc
        explode: false
        in: path
        name: stake_address
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_delegation_content'
          description: Return the account delegations content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Account delegation history
      tags:
      - Cardano » Accounts
      x-accepts: application/json
  /accounts/{stake_address}/registrations:
    get:
      description: |
        Obtain information about the registrations and deregistrations of a specific account.
      parameters:
      - description: Bech32 stake address.
        example: stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc
        explode: false
        in: path
        name: stake_address
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_registration_content'
          description: Return the account registration content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Account registration history
      tags:
      - Cardano » Accounts
      x-accepts: application/json
  /accounts/{stake_address}/addresses:
    get:
      description: Obtain information about the addresses of a specific account.
      parameters:
      - description: Bech32 stake address.
        example: stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc
        explode: false
        in: path
        name: stake_address
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/account_addresses_content'
          description: Return the account addresses content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Account associated addresses
      tags:
      - Cardano » Accounts
      x-accepts: application/json
  /metadata/txs/labels:
    get:
      description: |
        List of all used transaction metadata labels.
      parameters:
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_metadata_labels'
          description: Return the account delegations content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Transaction metadata labels
      tags:
      - Cardano » Metadata
      x-accepts: application/json
  /metadata/txs/labels/{label}:
    get:
      description: Transaction metadata per label.
      parameters:
      - description: Metadata label
        example: "1990"
        explode: false
        in: path
        name: label
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_metadata_label_json'
          description: Return the account delegations content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Transaction metadata content in JSON
      tags:
      - Cardano » Metadata
      x-accepts: application/json
  /metadata/txs/labels/{label}/cbor:
    get:
      description: Transaction metadata per label.
      parameters:
      - description: Metadata label
        example: "1990"
        explode: false
        in: path
        name: label
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tx_metadata_label_cbor'
          description: Return the account delegations content in CBOR
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Transaction metadata content in CBOR
      tags:
      - Cardano » Metadata
      x-accepts: application/json
  /addresses/{address}:
    get:
      description: Obtain information about a specific address.
      parameters:
      - description: Bech32 address.
        example: addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address_content'
          description: Return the address content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Specific address
      tags:
      - Cardano » Addresses
      x-accepts: application/json
  /addresses/{address}/total:
    get:
      description: Obtain details about an address.
      parameters:
      - description: Bech32 address.
        example: addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address_content_total'
          description: Return the address' details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Address' details
      tags:
      - Cardano » Addresses
      x-accepts: application/json
  /addresses/{address}/utxos:
    get:
      description: UTXOs of the address.
      parameters:
      - description: Bech32 address.
        example: addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "Ordered by tx index in the block.\nThe ordering of items from\
          \ the point of view of the blockchain,\nnot the page listing itself. By\
          \ default, we return oldest first, newest last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address_utxo_content'
          description: Return the address content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Address' UTXOs
      tags:
      - Cardano » Addresses
      x-accepts: application/json
  /addresses/{address}/txs:
    get:
      description: Transactions on the address.
      parameters:
      - description: Bech32 address.
        example: addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz
        explode: false
        in: path
        name: address
        required: true
        schema:
          type: string
        style: simple
      - description: The numbers of pools per page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/address_txs_content'
          description: Return the address content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Address' transactions
      tags:
      - Cardano » Addresses
      x-accepts: application/json
  /pools:
    get:
      description: List of registered stake pools.
      parameters:
      - description: The numbers of pools per page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool_list'
          description: Return the list of pools.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: List of stake pools
      tags:
      - Cardano » Pools
      x-accepts: application/json
  /pools/retired:
    get:
      description: List of already retired pools.
      parameters:
      - description: The numbers of pools per page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool_list_retire'
          description: Return the pool information content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: List of retired stake pools
      tags:
      - Cardano » Pools
      x-accepts: application/json
  /pools/retiring:
    get:
      description: List of stake pools retiring in the upcoming epochs
      parameters:
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool_list_retire'
          description: Return the pool information content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: List of retiring stake pools
      tags:
      - Cardano » Pools
      x-accepts: application/json
  /pools/{pool_id}:
    get:
      description: Pool information.
      parameters:
      - description: Bech32 or hexadecimal pool ID.
        example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool'
          description: Return the pool information content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Specific stake pool
      tags:
      - Cardano » Pools
      x-accepts: application/json
  /pools/{pool_id}/history:
    get:
      description: |
        History of stake pool parameters over epochs.
      parameters:
      - description: Bech32 or hexadecimal pool ID.
        example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool_history'
          description: Return the pool information content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Stake pool history
      tags:
      - Cardano » Pools
      x-accepts: application/json
  /pools/{pool_id}/metadata:
    get:
      description: |
        Stake pool registration metadata.
      parameters:
      - description: Bech32 or hexadecimal pool ID.
        example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/pool_metadata'
                - $ref: '#/components/schemas/empty_object'
          description: Return the pool metadata content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Stake pool metadata
      tags:
      - Cardano » Pools
      x-accepts: application/json
  /pools/{pool_id}/relays:
    get:
      description: Relays of a stake pool.
      parameters:
      - description: Bech32 or hexadecimal pool ID.
        example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool_relays'
          description: Return the pool relays information content.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Stake pool relays
      tags:
      - Cardano » Pools
      x-accepts: application/json
  /pools/{pool_id}/delegators:
    get:
      description: List of current stake pools delegators.
      parameters:
      - description: Bech32 or hexadecimal pool ID.
        example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool_delegators'
          description: Return the pool delegations.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Stake pool delegators
      tags:
      - Cardano » Pools
      x-accepts: application/json
  /pools/{pool_id}/blocks:
    get:
      description: List of stake pools blocks.
      parameters:
      - description: Bech32 or hexadecimal pool ID.
        example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool_blocks'
          description: Return the pool block list
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Stake pool blocks
      tags:
      - Cardano » Pools
      x-accepts: application/json
  /pools/{pool_id}/updates:
    get:
      description: List of certificate updates to the stake pool.
      parameters:
      - description: Bech32 or hexadecimal pool ID.
        example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
        explode: false
        in: path
        name: pool_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pool_updates'
          description: Return the pool updates history
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Stake pool updates
      tags:
      - Cardano » Pools
      x-accepts: application/json
  /assets:
    get:
      description: List of assets.
      parameters:
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/assets'
          description: Return list of assets
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Assets
      tags:
      - Cardano » Assets
      x-accepts: application/json
  /assets/{asset}:
    get:
      description: Information about a specific asset
      parameters:
      - description: Concatenation of the policy_id and hex-encoded asset_name
        example: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
        explode: false
        in: path
        name: asset
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asset'
          description: Return the information about a specific asset
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Specific asset
      tags:
      - Cardano » Assets
      x-accepts: application/json
  /assets/{asset}/history:
    get:
      description: History of a specific asset
      parameters:
      - description: Concatenation of the policy_id and hex-encoded asset_name
        example: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
        explode: false
        in: path
        name: asset
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asset_history'
          description: Return the information about the history of a specific asset
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Asset history
      tags:
      - Cardano » Assets
      x-accepts: application/json
  /assets/{asset}/txs:
    get:
      description: List of a specific asset transactions
      parameters:
      - description: Concatenation of the policy_id and hex-encoded asset_name
        example: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
        explode: false
        in: path
        name: asset
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asset_txs'
          description: Return the information about the history of a specific asset
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Asset transactions
      tags:
      - Cardano » Assets
      x-accepts: application/json
  /assets/{asset}/addresses:
    get:
      description: List of a addresses containing a specific asset
      parameters:
      - description: Concatenation of the policy_id and hex-encoded asset_name
        example: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
        explode: false
        in: path
        name: asset
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asset_addresses'
          description: Return the information about the history of a specific asset
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Asset addresses
      tags:
      - Cardano » Assets
      x-accepts: application/json
  /assets/policy/{policy_id}:
    get:
      description: List of asset minted under a specific policy
      parameters:
      - description: Specific policy_id
        example: 476039a0949cf0b22f6a800f56780184c44533887ca6e821007840c3
        explode: false
        in: path
        name: policy_id
        required: true
        schema:
          type: string
        style: simple
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asset_policy'
          description: Return the information about a specific asset
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Assets of a specific policy
      tags:
      - Cardano » Assets
      x-accepts: application/json
  /ipfs/add:
    post:
      description: |
        You need to `/ipfs/pin/add` an object to avoid it being garbage collected. This usage
        is being counted in your user account quota.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: Returns information about added IPFS object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Add a file or directory to IPFS
      tags:
      - IPFS » Add
      x-codeSamples:
      - lang: curl
        source: "curl \"https://ipfs.blockfrost.io/api/v0/ipfs/add\" \\\n  -X POST\
          \ \\\n  -H \"project_id: $PROJECT_ID\" \\\n  -F \"file=@./README.md\"\n"
      x-accepts: application/json
    servers:
    - url: https://ipfs.blockfrost.io/api/v0
  /ipfs/gateway/{IPFS_path}:
    get:
      description: "Retrieve an object from the IFPS gateway (useful if you do not\
        \ want to rely on a public gateway, such as `ipfs.blockfrost.dev`)."
      parameters:
      - explode: false
        in: path
        name: IPFS_path
        required: true
        schema:
          description: Path to the IPFS object
          type: string
        style: simple
      responses:
        "200":
          description: Returns the object content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Relay to an IPFS gateway
      tags:
      - IPFS » Gateway
      x-accepts: application/json
    servers:
    - url: https://ipfs.blockfrost.io/api/v0
  /ipfs/pin/add/{IPFS_path}:
    post:
      description: Pinned objects are counted in your user storage quota.
      parameters:
      - explode: false
        in: path
        name: IPFS_path
        required: true
        schema:
          description: Path to the IPFS object
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: Returns pinned object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Pin an object
      tags:
      - IPFS » Pins
      x-accepts: application/json
    servers:
    - url: https://ipfs.blockfrost.io/api/v0
  /ipfs/pin/list/:
    get:
      description: List objects pinned to local storage
      parameters:
      - description: The number of results displayed on one page.
        explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          maximum: 100
          type: integer
        style: form
      - description: The page number for listing the results.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: "The ordering of items from the point of view of the blockchain,\n\
          not the page listing itself. By default, we return oldest first, newest\
          \ last.\n"
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: asc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/inline_response_200_5'
                type: array
          description: Returns pinned objects
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      tags:
      - IPFS » Pins
      x-accepts: application/json
    servers:
    - url: https://ipfs.blockfrost.io/api/v0
  /ipfs/pin/list/{IPFS_path}:
    get:
      description: List objects pinned to local storage
      parameters:
      - explode: false
        in: path
        name: IPFS_path
        required: true
        schema:
          description: The path to the IPFS object
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
          description: Returns the pins pinned
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      tags:
      - IPFS » Pins
      x-accepts: application/json
    servers:
    - url: https://ipfs.blockfrost.io/api/v0
  /ipfs/pin/remove/{IPFS_path}:
    post:
      description: Remove pinned objects from local storage
      parameters:
      - explode: false
        in: path
        name: IPFS_path
        required: true
        schema:
          description: The path to the IPFS object
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: Returns the pins removed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      tags:
      - IPFS » Pins
      x-accepts: application/json
    servers:
    - url: https://ipfs.blockfrost.io/api/v0
  /metrics/:
    get:
      description: History of your Blockfrost usage metrics in the past 30 days.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metrics'
          description: Return the last 30 days of metrics
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Blockfrost usage metrics
      tags:
      - Metrics
      x-accepts: application/json
  /metrics/endpoints:
    get:
      description: |
        History of your Blockfrost usage metrics per endpoint in the past 30 days.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metrics_endpoints'
          description: Return the last 30 days of metrics
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_403'
          description: Authentication secret is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
          description: Component not found
        "418":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_418'
          description: IP has been auto-banned for extensive sending of requests after
            usage limit has been reached
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_429'
          description: Usage limit reached
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
          description: Internal Server Error
      summary: Blockfrost endpoint usage metrics
      tags:
      - Metrics
      x-accepts: application/json
components:
  responses:
    overusage_limit:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_429'
      description: Usage limit reached
    autobanned:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_418'
      description: IP has been auto-banned for extensive sending of requests after
        usage limit has been reached
    not_found:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_404'
      description: Component not found
    internal_server_error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_500'
      description: Internal Server Error
    unauthorized_error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_403'
      description: Authentication secret is missing or invalid
    bad_request:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_400'
      description: Bad request
  schemas:
    block_content_array:
      items:
        $ref: '#/components/schemas/block_content'
      type: array
    block_content:
      example:
        fees: "592661"
        tx_count: 1
        next_block: 8367f026cf4b03e116ff8ee5daf149b55ba5a6ec6dec04803b8dc317721d15fa
        epoch: 425
        epoch_slot: 12
        slot: 412162133
        confirmations: 4698
        slot_leader: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2qnikdy
        output: "128314491794"
        previous_block: 43ebccb3ac72c7cebd0d9b755a4b08412c9f5dcb81b8a0ad1e3c197d29d47b05
        size: 3
        time: 1641338934
        block_vrf: vrf_vk1wf2k6lhujezqcfe00l6zetxpnmh9n6mwhpmhm0dvfh3fxgmdnrfqkms8ty
        hash: 4ea1ba291e8eef538635a53e59fddba7810d1679631cc3aed7c8e6c4091a516a
        height: 15243593
      properties:
        time:
          description: Block creation time in UNIX time
          example: 1641338934
          type: integer
        height:
          description: Block number
          example: 15243593
          nullable: true
          type: integer
        hash:
          description: Hash of the block
          example: 4ea1ba291e8eef538635a53e59fddba7810d1679631cc3aed7c8e6c4091a516a
          type: string
        slot:
          description: Slot number
          example: 412162133
          nullable: true
          type: integer
        epoch:
          description: Epoch number
          example: 425
          nullable: true
          type: integer
        epoch_slot:
          description: Slot within the epoch
          example: 12
          nullable: true
          type: integer
        slot_leader:
          description: Bech32 ID of the slot leader or specific block description
            in case there is no slot leader
          example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2qnikdy
          type: string
        size:
          description: Block size in Bytes
          example: 3
          type: integer
        tx_count:
          description: Number of transactions in the block
          example: 1
          type: integer
        output:
          description: Total output within the block in Lovelaces
          example: "128314491794"
          nullable: true
          type: string
        fees:
          description: Total fees within the block in Lovelaces
          example: "592661"
          nullable: true
          type: string
        block_vrf:
          description: VRF key of the block
          example: vrf_vk1wf2k6lhujezqcfe00l6zetxpnmh9n6mwhpmhm0dvfh3fxgmdnrfqkms8ty
          maxLength: 65
          minLength: 65
          nullable: true
          type: string
        previous_block:
          description: Hash of the previous block
          example: 43ebccb3ac72c7cebd0d9b755a4b08412c9f5dcb81b8a0ad1e3c197d29d47b05
          nullable: true
          type: string
        next_block:
          description: Hash of the next block
          example: 8367f026cf4b03e116ff8ee5daf149b55ba5a6ec6dec04803b8dc317721d15fa
          nullable: true
          type: string
        confirmations:
          description: Number of block confirmations
          example: 4698
          type: integer
      required:
      - block_vrf
      - confirmations
      - epoch
      - epoch_slot
      - fees
      - hash
      - height
      - next_block
      - output
      - previous_block
      - size
      - slot
      - slot_leader
      - time
      - tx_count
      type: object
    block_content_txs:
      example:
      - 8788591983aa73981fc92d6cddbbe643959f5a784e84b8bee0db15823f575a5b
      - 4eef6bb7755d8afbeac526b799f3e32a624691d166657e9d862aaeb66682c036
      - 52e748c4dec58b687b90b0b40d383b9fe1f24c1a833b7395cdf07dd67859f46f
      - e8073fd5318ff43eca18a852527166aa8008bee9ee9e891f585612b7e4ba700b
      items:
        description: Hash of the transaction
        type: string
      type: array
    genesis_content:
      example:
        update_quorum: 5
        network_magic: 764824073
        slots_per_kes_period: 129600
        max_lovelace_supply: "45000000000000000"
        max_kes_evolutions: 62
        epoch_length: 432000
        system_start: 1506203091
        active_slots_coefficient: 0.05
        slot_length: 1
        security_param: 2160
      properties:
        active_slots_coefficient:
          description: The proportion of slots in which blocks should be issued
          example: 0.05
          type: number
        update_quorum:
          description: Determines the quorum needed for votes on the protocol parameter
            updates
          example: 5
          type: integer
        max_lovelace_supply:
          description: The total number of lovelace in the system
          example: "45000000000000000"
          type: string
        network_magic:
          description: Network identifier
          example: 764824073
          type: integer
        epoch_length:
          description: Number of slots in an epoch
          example: 432000
          type: integer
        system_start:
          description: Time of slot 0 in UNIX time
          example: 1506203091
          type: integer
        slots_per_kes_period:
          description: Number of slots in an KES period
          example: 129600
          type: integer
        slot_length:
          description: Duration of one slot in seconds
          example: 1
          type: integer
        max_kes_evolutions:
          description: The maximum number of time a KES key can be evolved before
            a pool operator must create a new operational certificate
          example: 62
          type: integer
        security_param:
          description: Security parameter k
          example: 2160
          type: integer
      required:
      - active_slots_coefficient
      - epoch_length
      - max_kes_evolutions
      - max_lovelace_supply
      - network_magic
      - security_param
      - slot_length
      - slots_per_kes_period
      - system_start
      - update_quorum
      type: object
    epoch_content_array:
      items:
        $ref: '#/components/schemas/epoch_content'
      type: array
    epoch_content:
      example:
        output: "7849943934049314"
        start_time: 1603403091
        active_stake: "784953934049314"
        fees: "4203312194"
        tx_count: 17856
        first_block_time: 1603403092
        end_time: 1603835086
        epoch: 225
        last_block_time: 1603835084
        block_count: 21298
      properties:
        epoch:
          description: Epoch number
          example: 225
          type: integer
        start_time:
          description: Unix time of the start of the epoch
          example: 1603403091
          type: integer
        end_time:
          description: Unix time of the end of the epoch
          example: 1603835086
          type: integer
        first_block_time:
          description: Unix time of the first block of the epoch
          example: 1603403092
          type: integer
        last_block_time:
          description: Unix time of the last block of the epoch
          example: 1603835084
          type: integer
        block_count:
          description: Number of blocks within the epoch
          example: 21298
          type: integer
        tx_count:
          description: Number of transactions within the epoch
          example: 17856
          type: integer
        output:
          description: Sum of all the transactions within the epoch in Lovelaces
          example: "7849943934049314"
          type: string
        fees:
          description: Sum of all the fees within the epoch in Lovelaces
          example: "4203312194"
          type: string
        active_stake:
          description: Sum of all the active stakes within the epoch in Lovelaces
          example: "784953934049314"
          nullable: true
          type: string
      required:
      - active_stake
      - block_count
      - end_time
      - epoch
      - fees
      - first_block_time
      - last_block_time
      - output
      - start_time
      - tx_count
      type: object
    epoch_stake_content:
      items:
        properties:
          stake_address:
            description: Stake address
            example: stake1u9l5q5jwgelgagzyt6nuaasefgmn8pd25c8e9qpeprq0tdcp0e3uk
            type: string
          pool_id:
            description: Bech32 prefix of the pool delegated to
            example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
            type: string
          amount:
            description: Amount of delegated stake in Lovelaces
            example: "4440295078"
            type: string
        required:
        - amount
        - pool_id
        - stake_address
      type: array
    epoch_stake_pool_content:
      items:
        properties:
          stake_address:
            description: Stake address
            example: stake1u9l5q5jwgelgagzyt6nuaasefgmn8pd25c8e9qpeprq0tdcp0e3uk
            type: string
          amount:
            description: Amount of delegated stake in Lovelaces
            example: "4440295078"
            type: string
        required:
        - amount
        - stake_address
      type: array
    epoch_block_content:
      example:
      - d0fa315687e99ccdc96b14cc2ea74a767405d64427b648c470731a9b69e4606e
      - 38bc6efb92a830a0ed22a64f979d120d26483fd3c811f6622a8c62175f530878
      - f3258fcd8b975c061b4fcdcfcbb438807134d6961ec278c200151274893b6b7d
      items:
        description: Hash of the block
        type: string
      type: array
    epoch_param_content:
      example:
        max_tx_size: 16384
        key_deposit: "2000000"
        decentralisation_param: 0.5
        min_pool_cost: "340000000"
        max_block_size: 65536
        min_fee_b: 155381
        tau: 0.2
        nonce: 1a3be38bcbb7911969283716ad7aa550250226b76a61fc51cc9a9a35d9276d81
        min_fee_a: 44
        extra_entropy: "{}"
        a0: 0.3
        pool_deposit: "500000000"
        protocol_major_ver: 2
        max_block_header_size: 1100
        e_max: 18
        min_utxo: "1000000"
        protocol_minor_ver: 0
        n_opt: 150
        rho: 0.003
      properties:
        min_fee_a:
          description: The linear factor for the minimum fee calculation for given
            epoch
          example: 44
          type: integer
        min_fee_b:
          description: The constant factor for the minimum fee calculation
          example: 155381
          type: integer
        max_block_size:
          description: Maximum block body size in Bytes
          example: 65536
          type: integer
        max_tx_size:
          description: Maximum transaction size
          example: 16384
          type: integer
        max_block_header_size:
          description: Maximum block header size
          example: 1100
          type: integer
        key_deposit:
          description: The amount of a key registration deposit in Lovelaces
          example: "2000000"
          type: string
        pool_deposit:
          description: The amount of a pool registration deposit in Lovelaces
          example: "500000000"
          type: string
        e_max:
          description: Epoch bound on pool retirement
          example: 18
          type: integer
        n_opt:
          description: Desired number of pools
          example: 150
          type: integer
        a0:
          description: Pool pledge influence
          example: 0.3
          type: number
        rho:
          description: Monetary expansion
          example: 0.003
          type: number
        tau:
          description: Treasury expansion
          example: 0.2
          type: number
        decentralisation_param:
          description: Percentage of blocks produced by federated nodes
          example: 0.5
          type: number
        extra_entropy:
          description: Seed for extra entropy
          nullable: true
          type: object
        protocol_major_ver:
          description: Accepted protocol major version
          example: 2
          type: integer
        protocol_minor_ver:
          description: Accepted protocol minor version
          example: 0
          type: integer
        min_utxo:
          description: Minimum UTXO value
          example: "1000000"
          type: string
        min_pool_cost:
          description: Minimum stake cost forced on the pool
          example: "340000000"
          type: string
        nonce:
          description: Epoch number only used once
          example: 1a3be38bcbb7911969283716ad7aa550250226b76a61fc51cc9a9a35d9276d81
          type: string
      required:
      - a0
      - decentralisation_param
      - e_max
      - extra_entropy
      - key_deposit
      - max_block_header_size
      - max_block_size
      - max_tx_size
      - min_fee_a
      - min_fee_b
      - min_pool_cost
      - min_utxo
      - n_opt
      - nonce
      - pool_deposit
      - protocol_major_ver
      - protocol_minor_ver
      - rho
      - tau
      type: object
    tx_content:
      example:
        fees: "182485"
        delegation_count: 0
        index: 1
        output_amount:
        - unit: lovelace
          quantity: "42000000"
        - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
          quantity: "12"
        block_height: 123456
        slot: 42000000
        invalid_hereafter: "13885913"
        stake_cert_count: 0
        utxo_count: 4
        size: 433
        withdrawal_count: 0
        deposit: "0"
        block: 356b7d7dbb696ccd12775c016941057a9dc70898d87a63fc752271bb46856940
        invalid_before: invalid_before
        pool_update_count: 0
        pool_retire_count: 0
      properties:
        block:
          description: Block hash
          example: 356b7d7dbb696ccd12775c016941057a9dc70898d87a63fc752271bb46856940
          type: string
        block_height:
          description: Block number
          example: 123456
          type: integer
        slot:
          description: Slot number
          example: 42000000
          type: integer
        index:
          description: Transaction index within the block
          example: 1
          type: integer
        output_amount:
          example:
          - unit: lovelace
            quantity: "42000000"
          - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
            quantity: "12"
          items:
            $ref: '#/components/schemas/tx_content_output_amount'
          type: array
        fees:
          description: Fees of the transaction in Lovelaces
          example: "182485"
          type: string
        deposit:
          description: Deposit within the transaction in Lovelaces
          example: "0"
          type: string
        size:
          description: Size of the transaction in Bytes
          example: 433
          type: integer
        invalid_before:
          description: Left (included) endpoint of the timelock validity intervals
          nullable: true
          type: string
        invalid_hereafter:
          description: Right (excluded) endpoint of the timelock validity intervals
          example: "13885913"
          nullable: true
          type: string
        utxo_count:
          description: Count of UTXOs within the transaction
          example: 4
          type: integer
        withdrawal_count:
          description: Count of the withdrawal within the transaction
          example: 0
          type: integer
        delegation_count:
          description: Count of the delegations within the transaction
          example: 0
          type: integer
        stake_cert_count:
          description: Count of the stake keys (de)registrations and delegations within
            the transaction
          example: 0
          type: integer
        pool_update_count:
          description: Count of the stake pool registrations and updates within the
            transaction
          example: 0
          type: integer
        pool_retire_count:
          description: Count of the stake pool retirements within the transaction
          example: 0
          type: integer
      required:
      - block
      - block_height
      - delegation_count
      - deposit
      - fees
      - index
      - invalid_before
      - invalid_hereafter
      - output_amount
      - pool_retire_count
      - pool_update_count
      - size
      - slot
      - stake_cert_count
      - utxo_count
      - withdrawal_count
      type: object
    tx_content_utxo:
      example:
        outputs:
        - amount:
          - unit: lovelace
            quantity: "42000000"
          - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
            quantity: "12"
          address: addr1q9ld26v2lv8wvrxxmvg90pn8n8n5k6tdst06q2s856rwmvnueldzuuqmnsye359fqrk8hwvenjnqultn7djtrlft7jnq7dy7wv
        - amount:
          - unit: lovelace
            quantity: "42000000"
          - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
            quantity: "12"
          address: addr1q9ld26v2lv8wvrxxmvg90pn8n8n5k6tdst06q2s856rwmvnueldzuuqmnsye359fqrk8hwvenjnqultn7djtrlft7jnq7dy7wv
        inputs:
        - amount:
          - unit: lovelace
            quantity: "42000000"
          - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
            quantity: "12"
          address: addr1q9ld26v2lv8wvrxxmvg90pn8n8n5k6tdst06q2s856rwmvnueldzuuqmnsye359fqrk8hwvenjnqultn7djtrlft7jnq7dy7wv
        - amount:
          - unit: lovelace
            quantity: "42000000"
          - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
            quantity: "12"
          address: addr1q9ld26v2lv8wvrxxmvg90pn8n8n5k6tdst06q2s856rwmvnueldzuuqmnsye359fqrk8hwvenjnqultn7djtrlft7jnq7dy7wv
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/tx_content_utxo_inputs'
          type: array
        outputs:
          items:
            $ref: '#/components/schemas/tx_content_utxo_outputs'
          type: array
      type: object
    tx_content_stake_addr:
      example:
        cert_index: 0
        address: stake1u9t3a0tcwune5xrnfjg4q7cpvjlgx9lcv0cuqf5mhfjwrvcwrulda
        registration: true
      properties:
        cert_index:
          description: Index of the certificate within the transaction
          example: 0
          type: integer
        address:
          description: Delegation stake address
          example: stake1u9t3a0tcwune5xrnfjg4q7cpvjlgx9lcv0cuqf5mhfjwrvcwrulda
          type: string
        registration:
          description: "Registration boolean, false if deregistration"
          example: true
          type: boolean
      required:
      - address
      - cert_index
      - registration
      type: object
    tx_content_delegations:
      example:
        cert_index: 0
        address: stake1u9r76ypf5fskppa0cmttas05cgcswrttn6jrq4yd7jpdnvc7gt0yc
        index: 0
        active_epoch: 210
        pool_id: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
      properties:
        index:
          deprecated: true
          description: Index of the certificate within the transaction
          example: 0
          type: integer
        cert_index:
          description: Index of the certificate within the transaction
          example: 0
          type: integer
        address:
          description: Bech32 delegation stake address
          example: stake1u9r76ypf5fskppa0cmttas05cgcswrttn6jrq4yd7jpdnvc7gt0yc
          type: string
        pool_id:
          description: Bech32 ID of delegated stake pool
          example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
          type: string
        active_epoch:
          description: Epoch in which the delegation becomes active
          example: 210
          type: integer
      required:
      - active_epoch
      - address
      - cert_index
      - index
      - pool_id
      type: object
    tx_content_withdrawals:
      example:
        amount: "431833601"
        address: stake1u9r76ypf5fskppa0cmttas05cgcswrttn6jrq4yd7jpdnvc7gt0yc
      properties:
        address:
          description: Bech32 withdrawal address
          example: stake1u9r76ypf5fskppa0cmttas05cgcswrttn6jrq4yd7jpdnvc7gt0yc
          type: string
        amount:
          description: Withdrawal amount in Lovelaces
          example: "431833601"
          type: string
      required:
      - address
      - amount
      type: object
    tx_content_pool_certs:
      example:
        cert_index: 0
        metadata:
          ticker: NUTS
          name: Stake Nuts
          description: The best pool ever
          url: https://stakenuts.com/mainnet.json
          hash: 47c0c68cb57f4a5b4a87bad896fc274678e7aea98e200fa14a1cb40c0cab1d8c
          homepage: https://stakentus.com/
        relays:
        - ipv4: 4.4.4.4
          dns_srv: _relays._tcp.relays.stakenuts.com
          port: 3001
          ipv6: https://stakenuts.com/mainnet.json
          dns: relay1.stakenuts.com
        - ipv4: 4.4.4.4
          dns_srv: _relays._tcp.relays.stakenuts.com
          port: 3001
          ipv6: https://stakenuts.com/mainnet.json
          dns: relay1.stakenuts.com
        pledge: "5000000000"
        active_epoch: 210
        owners:
        - stake1u98nnlkvkk23vtvf9273uq7cph5ww6u2yq2389psuqet90sv4xv9v
        vrf_key: 0b5245f9934ec2151116fb8ec00f35fd00e0aa3b075c4ed12cce440f999d8233
        pool_id: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
        margin_cost: 0.05
        fixed_cost: "340000000"
        reward_account: stake1uxkptsa4lkr55jleztw43t37vgdn88l6ghclfwuxld2eykgpgvg3f
      properties:
        cert_index:
          description: Index of the certificate within the transaction
          example: 0
          type: integer
        pool_id:
          description: Bech32 encoded pool ID
          example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
          type: string
        vrf_key:
          description: VRF key hash
          example: 0b5245f9934ec2151116fb8ec00f35fd00e0aa3b075c4ed12cce440f999d8233
          type: string
        pledge:
          description: Stake pool certificate pledge in Lovelaces
          example: "5000000000"
          type: string
        margin_cost:
          description: Margin tax cost of the stake pool
          example: 0.05
          type: number
        fixed_cost:
          description: Fixed tax cost of the stake pool in Lovelaces
          example: "340000000"
          type: string
        reward_account:
          description: Bech32 reward account of the stake pool
          example: stake1uxkptsa4lkr55jleztw43t37vgdn88l6ghclfwuxld2eykgpgvg3f
          type: string
        owners:
          example:
          - stake1u98nnlkvkk23vtvf9273uq7cph5ww6u2yq2389psuqet90sv4xv9v
          items:
            description: Bech32 accounts of the pool owners
            type: string
          type: array
        metadata:
          $ref: '#/components/schemas/tx_content_pool_certs_metadata'
        relays:
          items:
            $ref: '#/components/schemas/tx_content_pool_certs_relays'
          type: array
        active_epoch:
          description: Epoch that the delegation becomes active
          example: 210
          type: integer
      required:
      - active_epoch
      - cert_index
      - fixed_cost
      - margin_cost
      - metadata
      - owners
      - pledge
      - pool_id
      - relays
      - reward_account
      - vrf_key
      type: object
    tx_content_pool_retires:
      example:
        cert_index: 0
        retiring_epoch: 216
        pool_id: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
      properties:
        cert_index:
          description: Index of the certificate within the transaction
          example: 0
          type: integer
        pool_id:
          description: Bech32 stake pool ID
          example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
          type: string
        retiring_epoch:
          description: Retiring epoch
          example: 216
          type: integer
      required:
      - cert_index
      - pool_id
      - retiring_epoch
      type: object
    tx_content_metadata:
      example:
      - label: "1967"
        json_metadata:
          metadata: https://nut.link/metadata.json
          hash: 6bf124f217d0e5a0a8adb1dbd8540e1334280d49ab861127868339f43b3948af
      - label: "1968"
        json_metadata:
          ADAUSD:
          - value: "0.10409800535729975"
            source: ergoOracles
      items:
        properties:
          label:
            description: Metadata label
            type: string
          json_metadata:
            description: Content of the metadata
            oneOf:
            - type: string
            - type: object
        required:
        - json_metadata
        - label
        type: object
      type: array
    tx_content_metadata_cbor:
      example:
      - label: "1968"
        cbor_metadata: \xa100a16b436f6d62696e6174696f6e8601010101010c
      items:
        properties:
          label:
            description: Metadata label
            type: string
          cbor_metadata:
            description: Content of the CBOR metadata
            nullable: true
            type: string
        required:
        - cbor_metadata
        - label
        type: object
      type: array
    account_content:
      example:
        treasury_sum: "12000000"
        controlled_amount: "619154618165"
        withdrawals_sum: "12125369253"
        reserves_sum: "319154618165"
        withdrawable_amount: "319154618165"
        active: true
        active_epoch: 412
        pool_id: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
        rewards_sum: "319154618165"
      properties:
        active:
          description: Registration state of an account
          example: true
          type: boolean
        active_epoch:
          description: Epoch of the most recent action - registration or deregistration
          example: 412
          type: integer
        controlled_amount:
          description: Balance of the account in Lovelaces
          example: "619154618165"
          type: string
        rewards_sum:
          description: Sum of all rewards for the account in the Lovelaces
          example: "319154618165"
          type: string
        withdrawals_sum:
          description: Sum of all the withdrawals for the account in Lovelaces
          example: "12125369253"
          type: string
        reserves_sum:
          description: Sum of all  funds from reserves for the account in the Lovelaces
          example: "319154618165"
          type: string
        treasury_sum:
          description: Sum of all funds from treasury for the account in the Lovelaces
          example: "12000000"
          type: string
        withdrawable_amount:
          description: Sum of available rewards that haven't been withdrawn yet for
            the account in the Lovelaces
          example: "319154618165"
          type: string
        pool_id:
          description: Bech32 pool ID that owns the account
          example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
          nullable: true
          type: string
      required:
      - active
      - active_epoch
      - controlled_amount
      - pool_id
      - reserves_sum
      - rewards_sum
      - treasury_sum
      - withdrawable_amount
      - withdrawals_sum
      type: object
    account_addresses_content:
      example:
      - address: addr1qx2kd28nq8ac5prwg32hhvudlwggpgfp8utlyqxu6wqgz62f79qsdmm5dsknt9ecr5w468r9ey0fxwkdrwh08ly3tu9sy0f4qd
      - address: addr1qys3czp8s9thc6u2fqed9yq3h24nyw28uk0m6mkgn9dkckjf79qsdmm5dsknt9ecr5w468r9ey0fxwkdrwh08ly3tu9suth4w4
      - address: addr1q8j55h253zcvl326sk5qdt2n8z7eghzspe0ekxgncr796s2f79qsdmm5dsknt9ecr5w468r9ey0fxwkdrwh08ly3tu9sjmd35m
      - address: addr1q8f7gxrprank3drhx8k5grlux7ene0nlwun8y9thu8mc3yjf79qsdmm5dsknt9ecr5w468r9ey0fxwkdrwh08ly3tu9sls6vnt
      items:
        properties:
          address:
            description: Address associated with the stake key
            type: string
        type: object
      type: array
    account_reward_content:
      example:
      - epoch: 215
        amount: "12695385"
        pool_id: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
      - epoch: 216
        amount: "3586329"
        pool_id: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
      - epoch: 217
        amount: "0"
        pool_id: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
      - epoch: 218
        amount: "1395265"
        pool_id: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
      items:
        properties:
          epoch:
            description: Epoch of the associated reward
            type: integer
          amount:
            description: Rewards for given epoch in Lovelaces
            nullable: true
            type: string
          pool_id:
            description: Bech32 pool ID being delegated to
            type: string
        required:
        - amount
        - epoch
        - pool_id
        type: object
      type: array
    account_delegation_content:
      example:
      - active_epoch: 210
        tx_hash: 2dd15e0ef6e6a17841cb9541c27724072ce4d4b79b91e58432fbaa32d9572531
        amount: "12695385"
        pool_id: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
      - active_epoch: 242
        tx_hash: 1a0570af966fb355a7160e4f82d5a80b8681b7955f5d44bec0dde628516157f0
        amount: "12691385"
        pool_id: pool1kchver88u3kygsak8wgll7htr8uxn5v35lfrsyy842nkscrzyvj
      items:
        properties:
          active_epoch:
            description: Epoch that the delegation becomes active
            example: 210
            type: integer
          tx_hash:
            description: Hash of the transaction containing the delegation
            type: string
          amount:
            description: Rewards for given epoch in Lovelaces
            nullable: true
            type: string
          pool_id:
            description: Bech32 ID of pool being delegated to
            type: string
        required:
        - active_epoch
        - amount
        - pool_id
        - tx_hash
        type: object
      type: array
    account_history_content:
      example:
      - active_epoch: 210
        amount: "12695385"
        pool_id: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
      - active_epoch: 211
        amount: "22695385"
        pool_id: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
      items:
        properties:
          epoch:
            description: Epoch that the stake is active
            example: 210
            type: integer
          amount:
            description: Stake amount in Lovelaces
            nullable: true
            type: string
          pool_id:
            description: Bech32 ID of pool being delegated to
            type: string
        required:
        - active_epoch
        - amount
        - pool_id
        type: object
      type: array
    account_registration_content:
      example:
      - tx_hash: 2dd15e0ef6e6a17841cb9541c27724072ce4d4b79b91e58432fbaa32d9572531
        action: registered
      - tx_hash: 1a0570af966fb355a7160e4f82d5a80b8681b7955f5d44bec0dde628516157f0
        action: deregistered
      items:
        properties:
          tx_hash:
            description: Hash of the transaction containing the (de)registration certificate
            type: string
          action:
            description: Action in the certificate
            enum:
            - registered
            - deregistered
            type: string
        required:
        - action
        - tx_hash
        type: object
      type: array
    address_content:
      example:
        amount:
        - unit: lovelace
          quantity: "42000000"
        - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
          quantity: "12"
        stake_address: stake1ux3g2c9dx2nhhehyrezyxpkstartcqmu9hk63qgfkccw5rqttygt7
        type: shelley
      properties:
        amount:
          example:
          - unit: lovelace
            quantity: "42000000"
          - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
            quantity: "12"
          items:
            $ref: '#/components/schemas/tx_content_output_amount'
          type: array
        stake_address:
          description: Stake address that controls the key
          example: stake1ux3g2c9dx2nhhehyrezyxpkstartcqmu9hk63qgfkccw5rqttygt7
          nullable: true
          type: string
        type:
          description: Address era
          enum:
          - byron
          - shelley
          example: shelley
          type: string
      required:
      - amount
      - stake_address
      - type
      type: object
    address_content_total:
      example:
        received_sum:
        - unit: lovelace
          quantity: "42000000"
        - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
          quantity: "12"
        tx_count: 12
        sent_sum:
        - unit: lovelace
          quantity: "42000000"
        - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
          quantity: "12"
      properties:
        received_sum:
          example:
          - unit: lovelace
            quantity: "42000000"
          - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
            quantity: "12"
          items:
            $ref: '#/components/schemas/tx_content_output_amount'
          type: array
        sent_sum:
          example:
          - unit: lovelace
            quantity: "42000000"
          - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
            quantity: "12"
          items:
            $ref: '#/components/schemas/tx_content_output_amount'
          type: array
        tx_count:
          description: Count of all transactions on the address
          example: 12
          type: integer
      required:
      - received_sum
      - sent_sum
      - tx_count
      type: object
    address_utxo_content:
      example:
      - tx_hash: 39a7a284c2a0948189dc45dec670211cd4d72f7b66c5726c08d9b3df11e44d58
        output_index: 0
        amount:
        - unit: lovelace
          quantity: "42000000"
        block: 7eb8e27d18686c7db9a18f8bbcfe34e3fed6e047afaa2d969904d15e934847e6
      - tx_hash: 4c4e67bafa15e742c13c592b65c8f74c769cd7d9af04c848099672d1ba391b49
        output_index: 0
        amount:
        - unit: lovelace
          quantity: "729235000"
        block: 953f1b80eb7c11a7ffcd67cbd4fde66e824a451aca5a4065725e5174b81685b7
      - tx_hash: 768c63e27a1c816a83dc7b07e78af673b2400de8849ea7e7b734ae1333d100d2
        output_index: 1
        amount:
        - unit: lovelace
          quantity: "42000000"
        - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
          quantity: "12"
        block: 5c571f83fe6c784d3fbc223792627ccf0eea96773100f9aedecf8b1eda4544d7
      items:
        properties:
          tx_hash:
            description: Transaction hash of the UTXO
            type: string
          tx_index:
            deprecated: true
            description: UTXO index in the transaction
            type: integer
          output_index:
            description: UTXO index in the transaction
            type: integer
          amount:
            items:
              description: The sum of all the UTXO per asset
              properties:
                unit:
                  description: The unit of the value
                  format: Lovelace or concatenation of asset policy_id and hex-encoded
                    asset_name
                  type: string
                quantity:
                  description: The quantity of the unit
                  type: string
              type: object
            type: array
          block:
            description: Block number of the UTXO
            type: string
        type: object
      type: array
    address_txs_content:
      example:
      - 2dd15e0ef6e6a17841cb9541c27724072ce4d4b79b91e58432fbaa32d9572531
      - 1a0570af966fb355a7160e4f82d5a80b8681b7955f5d44bec0dde628516157f0
      items:
        description: Hash of the transaction containing the (de)registration certificate
        type: string
      type: array
    tx_metadata_labels:
      example:
      - label: "1990"
        cip10: null
        count: "1"
      - label: "1967"
        cip10: nut.link metadata oracles registry
        count: "3"
      - label: "1968"
        cip10: nut.link metadata oracles data points
        count: "16321"
      items:
        properties:
          label:
            description: Metadata label
            type: string
          cip10:
            description: CIP10 defined description
            nullable: true
            type: string
          count:
            description: The count of metadata entries with a specific label
            type: string
        type: object
      type: array
    tx_metadata_label_json:
      example:
      - tx_hash: 257d75c8ddb0434e9b63e29ebb6241add2b835a307aa33aedba2effe09ed4ec8
        json_metadata:
          ADAUSD:
          - value: "0.10409800535729975"
            source: ergoOracles
      - tx_hash: e865f2cc01ca7381cf98dcdc4de07a5e8674b8ea16e6a18e3ed60c186fde2b9c
        json_metadata:
          ADAUSD:
          - value: "0.15409850555139935"
            source: ergoOracles
      - tx_hash: 4237501da3cfdd53ade91e8911e764bd0699d88fd43b12f44a1f459b89bc91be
        json_metadata: null
      items:
        properties:
          tx_hash:
            description: Transaction hash that contains the specific metadata
            type: string
          json_metadata:
            anyOf:
            - type: string
            - type: object
            - items: {}
              type: array
            - type: integer
            - type: number
            - type: boolean
            description: Content of the JSON metadata
            nullable: true
        required:
        - json_metadata
        - tx_hash
        type: object
      type: array
    tx_metadata_label_cbor:
      example:
      - tx_hash: 257d75c8ddb0434e9b63e29ebb6241add2b835a307aa33aedba2effe09ed4ec8
        cbor_metadata: null
      - tx_hash: e865f2cc01ca7381cf98dcdc4de07a5e8674b8ea16e6a18e3ed60c186fde2b9c
        cbor_metadata: null
      - tx_hash: 4237501da3cfdd53ade91e8911e764bd0699d88fd43b12f44a1f459b89bc91be
        cbor_metadata: \xa100a16b436f6d62696e6174696f6e8601010101010c
      items:
        properties:
          tx_hash:
            description: Transaction hash that contains the specific metadata
            type: string
          cbor_metadata:
            description: Content of the CBOR metadata
            nullable: true
            type: string
        required:
        - cbor_metadata
        - tx_hash
        type: object
      type: array
    pool_list:
      example:
      - pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
      - pool1hn7hlwrschqykupwwrtdfkvt2u4uaxvsgxyh6z63703p2knj288
      - pool1ztjyjfsh432eqetadf82uwuxklh28xc85zcphpwq6mmezavzad2
      items:
        description: Bech32 encoded pool ID
        type: string
      type: array
    pool_list_retire:
      example:
      - pool_id: pool19u64770wqp6s95gkajc8udheske5e6ljmpq33awxk326zjaza0q
        epoch: 225
      - pool_id: pool1dvla4zq98hpvacv20snndupjrqhuc79zl6gjap565nku6et5zdx
        epoch: 215
      - pool_id: pool1wvccajt4eugjtf3k0ja3exjqdj7t8egsujwhcw4tzj4rzsxzw5w
        epoch: 231
      items:
        properties:
          pool_id:
            description: Bech32 encoded pool ID
            example: pool1z5uqdk7dzdxaae5633fqfcu2eqzy3a3rgtuvy087fdld7yws0xt
            type: string
          epoch:
            description: Retirement epoch number
            example: 242
            type: integer
        type: object
      type: array
    pool_history:
      items:
        properties:
          epoch:
            description: Epoch number
            example: 233
            type: integer
          blocks:
            description: Number of blocks created by pool
            example: 22
            type: integer
          active_stake:
            description: Active (Snapshot of live stake 2 epochs ago) stake in Lovelaces
            example: "20485965693569"
            type: string
          active_size:
            description: Pool size (percentage) of overall active stake at that epoch
            example: 1.2345
            type: number
          delegators_count:
            description: Number of delegators for epoch
            example: 115
            type: integer
          rewards:
            description: Total rewards received before distribution to delegators
            example: "206936253674159"
            type: string
          fees:
            description: Pool operator rewards
            example: "1290968354"
            type: string
        required:
        - active_size
        - active_stake
        - blocks
        - delegators_count
        - epoch
        - fees
        - rewards
        type: object
      type: array
    pool:
      example:
        live_saturation: 0.93
        live_pledge: "5000000001"
        active_stake: "4200000000"
        declared_pledge: "5000000000"
        owners:
        - stake1u98nnlkvkk23vtvf9273uq7cph5ww6u2yq2389psuqet90sv4xv9v
        retirement:
        - 252f622976d39e646815db75a77289cf16df4ad2b287dd8e3a889ce14c13d1a8
        - 252f622976d39e646815db75a77289cf16df4ad2b287dd8e3a889ce14c13d1a8
        blocks_minted: 69
        margin_cost: 0.05
        active_size: 0.43
        live_stake: "6900000000"
        live_delegators: 127
        live_size: 0.42
        registration:
        - 9f83e5484f543e05b52e99988272a31da373f3aab4c064c76db96643a355d9dc
        - 7ce3b8c433bf401a190d58c8c483d8e3564dfd29ae8633c8b1b3e6c814403e95
        - 3e6e1200ce92977c3fe5996bd4d7d7e192bcb7e231bc762f9f240c76766535b9
        vrf_key: 0b5245f9934ec2151116fb8ec00f35fd00e0aa3b075c4ed12cce440f999d8233
        fixed_cost: "340000000"
        reward_account: stake1uxkptsa4lkr55jleztw43t37vgdn88l6ghclfwuxld2eykgpgvg3f
      properties:
        vrf_key:
          description: VRF key hash
          example: 0b5245f9934ec2151116fb8ec00f35fd00e0aa3b075c4ed12cce440f999d8233
          type: string
        blocks_minted:
          description: Total minted blocks
          example: 69
          type: integer
        live_stake:
          example: "6900000000"
          type: string
        live_size:
          example: 0.42
          type: number
        live_saturation:
          example: 0.93
          type: number
        live_delegators:
          example: 127
          type: number
        active_stake:
          example: "4200000000"
          type: string
        active_size:
          example: 0.43
          type: number
        declared_pledge:
          description: Stake pool certificate pledge
          example: "5000000000"
          type: string
        live_pledge:
          description: Stake pool current pledge
          example: "5000000001"
          type: string
        margin_cost:
          description: Margin tax cost of the stake pool
          example: 0.05
          type: number
        fixed_cost:
          description: Fixed tax cost of the stake pool
          example: "340000000"
          type: string
        reward_account:
          description: Bech32 reward account of the stake pool
          example: stake1uxkptsa4lkr55jleztw43t37vgdn88l6ghclfwuxld2eykgpgvg3f
          type: string
        owners:
          example:
          - stake1u98nnlkvkk23vtvf9273uq7cph5ww6u2yq2389psuqet90sv4xv9v
          items:
            description: Bech32 accounts of the pool owners
            type: string
          type: array
        registration:
          example:
          - 9f83e5484f543e05b52e99988272a31da373f3aab4c064c76db96643a355d9dc
          - 7ce3b8c433bf401a190d58c8c483d8e3564dfd29ae8633c8b1b3e6c814403e95
          - 3e6e1200ce92977c3fe5996bd4d7d7e192bcb7e231bc762f9f240c76766535b9
          items:
            nullable: true
            type: string
          type: array
        retirement:
          items:
            example: 252f622976d39e646815db75a77289cf16df4ad2b287dd8e3a889ce14c13d1a8
            nullable: true
            type: string
          type: array
      required:
      - active_size
      - active_stake
      - blocks_minted
      - declared_pledge
      - fixed_cost
      - live_delegators
      - live_pledge
      - live_saturation
      - live_size
      - live_stake
      - margin_cost
      - owners
      - registration
      - retirement
      - reward_account
      - vrf_key
      type: object
    pool_metadata:
      properties:
        url:
          description: URL to the stake pool metadata
          example: https://stakenuts.com/mainnet.json
          nullable: true
          type: string
        hash:
          description: Hash of the metadata file
          example: 47c0c68cb57f4a5b4a87bad896fc274678e7aea98e200fa14a1cb40c0cab1d8c
          nullable: true
          type: string
        ticker:
          description: Ticker of the stake pool
          example: NUTS
          nullable: true
          type: string
        name:
          description: Name of the stake pool
          example: Stake Nuts
          nullable: true
          type: string
        description:
          description: Description of the stake pool
          example: The best pool ever
          nullable: true
          type: string
        homepage:
          description: Home page of the stake pool
          example: https://stakentus.com/
          nullable: true
          type: string
      required:
      - description
      - hash
      - homepage
      - name
      - ticker
      - url
      type: object
    pool_relays:
      items:
        properties:
          ipv4:
            description: IPv4 address of the relay
            example: 4.4.4.4
            nullable: true
            type: string
          ipv6:
            description: IPv6 address of the relay
            example: https://stakenuts.com/mainnet.json
            nullable: true
            type: string
          dns:
            description: DNS name of the relay
            example: relay1.stakenuts.com
            nullable: true
            type: string
          dns_srv:
            description: DNS SRV entry of the relay
            example: _relays._tcp.relays.stakenuts.com
            nullable: true
            type: string
          port:
            description: Network port of the relay
            example: 3001
            type: integer
        type: object
      required:
      - dns
      - dns_srv
      - ipv4
      - ipv6
      - port
      type: array
    pool_delegations:
      example:
      - tx_hash: 6804edf9712d2b619edb6ac86861fe93a730693183a262b165fcc1ba1bc99cad
        cert_index: 0
      - tx_hash: 9c190bc1ac88b2ab0c05a82d7de8b71b67a9316377e865748a89d4426c0d3005
        cert_index: 0
      - tx_hash: e14a75b0eb2625de7055f1f580d70426311b78e0d36dd695a6bdc96c7b3d80e0
        cert_index: 1
      items:
        properties:
          tx_hash:
            description: Transaction ID
            type: string
          cert_index:
            description: Certificate within the transaction
            type: integer
        required:
        - cert_index
        - tx_hash
        type: object
      type: array
    pool_blocks:
      example:
      - d8982ca42cfe76b747cc681d35d671050a9e41e9cfe26573eb214e94fe6ff21d
      - 026436c539e2ce84c7f77ffe669f4e4bbbb3b9c53512e5857dcba8bb0b4e9a8c
      - bcc8487f419b8c668a18ea2120822a05df6dfe1de1f0fac3feba88cf760f303c
      - 86bf7b4a274e0f8ec9816171667c1b4a0cfc661dc21563f271acea9482b62df7
      items:
        description: Block hashes
        type: string
      type: array
    pool_updates:
      example:
      - tx_hash: 6804edf9712d2b619edb6ac86861fe93a730693183a262b165fcc1ba1bc99cad
        cert_index: 0
        action: registered
      - tx_hash: 9c190bc1ac88b2ab0c05a82d7de8b71b67a9316377e865748a89d4426c0d3005
        cert_index: 0
        action: deregistered
      - tx_hash: e14a75b0eb2625de7055f1f580d70426311b78e0d36dd695a6bdc96c7b3d80e0
        cert_index: 1
        action: registered
      items:
        properties:
          tx_hash:
            description: Transaction ID
            type: string
          cert_index:
            description: Certificate within the transaction
            type: integer
          action:
            description: Action in the certificate
            enum:
            - registered
            - deregistered
            type: string
        required:
        - action
        - cert_index
        - tx_hash
        type: object
      type: array
    pool_delegators:
      example:
      - address: stake1ux4vspfvwuus9uwyp5p3f0ky7a30jq5j80jxse0fr7pa56sgn8kha
        live_stake: "1137959159981411"
      - address: stake1uylayej7esmarzd4mk4aru37zh9yz0luj3g9fsvgpfaxulq564r5u
        live_stake: "16958865648"
      - address: stake1u8lr2pnrgf8f7vrs9lt79hc3sxm8s2w4rwvgpncks3axx6q93d4ck
        live_stake: "18605647"
      items:
        properties:
          address:
            description: Bech32 encoded stake addresses
            type: string
          live_stake:
            description: Currently delegated amount
            type: string
        required:
        - address
        - live_stake
        type: object
      type: array
    assets:
      example:
      - asset: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
        quantity: "1"
      - asset: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e75d
        quantity: "100000"
      - asset: 6804edf9712d2b619edb6ac86861fe93a730693183a262b165fcc1ba1bc99cad
        quantity: "18605647"
      items:
        properties:
          asset:
            description: Asset identifier
            format: Concatenation of the policy_id and hex-encoded asset_name
            type: string
          quantity:
            description: Current asset quantity
            type: string
        required:
        - asset
        - quantity
        type: object
      type: array
    asset:
      example:
        metadata:
          ticker: nutc
          name: nutcoin
          description: The Nut Coin
          logo: iVBORw0KGgoAAAANSUhEUgAAADAAAAAoCAYAAAC4h3lxAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH5QITCDUPjqwFHwAAB9xJREFUWMPVWXtsU9cZ/8499/r6dZ3E9rUdO7ZDEgglFWO8KaOsJW0pCLRKrN1AqqYVkqoqrYo0ja7bpElru1WairStFKY9WzaE1E1tx+jokKqwtqFNyhKahEJJyJNgJ37E9r1+3HvO/sFR4vhx7SBtfH/F3/l93/f7ne/4PBxEKYU72dj/ZfH772v1TU+HtqbTaX8wOO01GPQpRVH7JEm+vGHDuq6z7/8jUSoHKtaBKkEUFUXdajDy1hUrmrs6zn/wWS7m7pZVjMUirKGUTnzc+e9xLcTrPPVfZzDz06Sc2lyQGEIyAPzT7Xa+dvE/3e+XLaCxoflHsVj8MAAYs74aa/WHoenwvpkZKeFy2Z5NJlOPUkqXZccFwSSrKjlyffjLH+TL6XTUGTGL/6hklD3ldIrj2M5MRmkLBMcvaRLQ1Nj88sxM/HCBfMP+eu/OYGDqe6l0WmpoqJ/88upgrU7HrQNA/cFg6MlkKiLlBtVUO40cx54BgHvLIT/HJLvdeqh/4NKxogKWN7fsCoUi7xTLxLJ4vLq6ak//wKVOrdXtttrTDMPsqJA8AAAwDErdu3VL3alTf5ma9eWCpoKhn5dKpCiqJxicPucQPVu0FHaInn35yHMcKwPAa4SQ3QCwFgDWUko3qSr5vqqSgTypuEg4Mo/zvA74/Y0rZSnZU8akSHV17k2fXfy0txjI5224kEym1s/1EUI7LBbztweHrkzkizn49LP6U6feepFSeggAQK/n04SQZ8bGrxdeQjZrbRvGzLH5hcibRqOhPplMfS1fIY5jz4xPDBdcGggho2h3z9sOLRazdG3wqp9SMgUlzGZ17SSEPsRx7J8CwfGu3PF57WhqqjfN/VxVJUxKUrIdITAXKpDJKFscosdfaFy0u+/K9aXTmXe0kAcAmA5Nng5Hbj6Tj/wCAYFAcN7uEY3GXGazMSHLqVVFapgBoMPna9yqhRAAgCTJMa3YUjZPgNFkSlWYx5eUkx+0tKx83V3rF+cVYJjruWCe133DIXqMmrNrFSDabRcWkywYmG5XFOW6aHcfb9324CoAgMmbo9MIoXkneCajiAihV/c/8eSiBSw4BxyiZxQA6m7H7FBKT2CMn2MY5jFFUX6ZO+5w2j8aHZ7YH40FByrJD5DnHGAY5uTtIA8AgBDaR4F2Yxb3WizCgmtA4ObUPSazodduqz3Suu0hf0U1cjvgdNSJ1dWWveFwdDUAtAiC2Uopdcdi8c9Zlh3GmDGl05mtAKAvo47EcdwThJCjqqpWFxALlNITomg73tff21GRAJez7iVK4WGGYfoJIQduBsbm7UrLm1ueCoUiv65kpiilw1ZbzcFoZOYoIcRTAn6eYZgXJm+Oni+Vd3YJbdyweSch9HlK6SpVVfcyDDq7Yf3m2XPBIXraKyV/a4b9UkLawbLsZgB4rwR8CyGkw13r+5fX27BckwBAEJ47oKpk8+DgUIdod7fV1vqOAMDrlZLPmqKoB+rrvXIgOP6w0WjYy3Ls5RL4bUk52bVm9fqnCk7M3CXU2ND8+MxM7BcIIftiyRYyntcdHh0bmr0wfmXl6p2SJB2KRmP3l4j7zejYUFtRAQAAgslm1Bv4nyGEDpYiIwjmjw0G/RjP866JiclNqqqWfKLq9fyZkdHBBXcnl9O71GDgD8bj0ncRQqZ8sRgzL9yYHH2pqICsOUTPLgA4CXNeZFmzWIS/YhYfjUZmvqPjuceSckrz25pS2h2cmlhbaBwhzr6kfsnL8Xhif55YYFl23Y3Jkdl7EVMoUSA4/q6qqNsBIPd11e52u45FwtG3CSH7yiEPAGC1Vt9dXGBmanDoygFLlbAjtzZCCMyC6VeaOpA1l9N7l1kwtauKaozHE28YTQaQpeR7+TqjxXheR0fHhhgt2CX1S3clEtKC16HL5djYe+niBU0CcmYA2W21/Qih5ZqDcoxlMZ24MaJJAABA87IVJ8Lh6N65Pr1B/+LIyLUfAhRZQvnM6ah7ZDHkAQB0vK6/HHxNTc2ruT5Zkldn/y5LACFk+2LIAwAwCGl6yGSt88KHXbmrBCHkqEgAz+vWLFZALJb4qNwYhFDhCSknkSwnQ4sVgDFeWg7+gQe2r1tAmkGTFQlACHWVg89nhJA9ot3dphV/eeCLp/Pw6K5IQP0S39uLFXCLwDG7zf1cKZxD9LSlUunHc/12u/2t2Vzl/rzu8zb8PZlM7bwdQgDgPK/nX2nddt+53//ht3LW2dS0fF0iLj2vquojuQFmwXRucPBKa8UCmpe1iOFwpAsAfLdJBFBKwVIlXJ2JxqKCxbwyHkvoCkAlv9/71U+7Oq+UJWDZ0hViJBL1cRynbNq0sSeeiPl6ei4NqIqq6TSmlB7X6bjuTEY5pgWfzwxGPZhMpt39/b3vzvWXFGCzulZjjM/DrauDwcAr8bjcgzGjZUuVBMH8k2uDX7wCAFDr8n2LEPI7SqmhTP6SzVbz6MDlz0/nDpT8EmOM22HOvUeWU2wp8iyLgRL6hk7Hrc2SBwC4MTlykmXZRozxn00mbVcphNA5jJmV+chr6oDd5l6jN/A/TqfSuwEAGITGMIsvGo3GTwTB3Dc2NjGSxdZYq4VIOOoNBANnKE0XPXE3brjHOTQ08k2MmVZOxzVJCbkFIQSCYEphzPaFQuGzTpfjb319PZ8UFXin/5OvrHPg/9HueAH/BSUqOuNZm4fyAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIxLTAyLTE5VDA4OjUyOjI1KzAwOjAwCmFGlgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMS0wMi0xOVQwODo1MjoyMyswMDowMBjsyxAAAAAASUVORK5CYII=
          url: https://www.stakenuts.com/
        quantity: "12000"
        policy_id: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a7
        asset_name: 6e7574636f696e
        initial_mint_tx_hash: 6804edf9712d2b619edb6ac86861fe93a730693183a262b165fcc1ba1bc99cad
        fingerprint: asset1pkpwyknlvul7az0xx8czhl60pyel45rpje4z8w
        onchain_metadata:
          key: "{}"
      properties:
        policy_id:
          description: Policy ID of the asset
          example: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a7
          type: string
        asset_name:
          description: Hex-encoded asset name of the asset
          example: 6e7574636f696e
          nullable: true
          type: string
        fingerprint:
          description: CIP14 based user-facing fingerprint
          example: asset1pkpwyknlvul7az0xx8czhl60pyel45rpje4z8w
          type: string
        quantity:
          description: Current asset quantity
          example: "12000"
          type: string
        initial_mint_tx_hash:
          description: ID of the initial minting transaction
          example: 6804edf9712d2b619edb6ac86861fe93a730693183a262b165fcc1ba1bc99cad
          type: string
        onchain_metadata:
          additionalProperties: true
          description: "On-chain metadata stored in the minting transaction under\
            \ label 721,\ncommunity discussion around the standard ongoing at https://github.com/cardano-foundation/CIPs/pull/85\n"
          nullable: true
          properties:
            name:
              description: Name of the asset
              example: My NFT token
              type: string
            image:
              description: URI of the associated asset
              example: ipfs://ipfs/QmfKyJ4tuvHowwKQCbCHj4L5T3fSj8cjs7Aau8V7BWv226
              type: string
          type: object
        metadata:
          $ref: '#/components/schemas/asset_metadata'
      required:
      - asset_name
      - initial_mint_tx_hash
      - metadata
      - policy_id
      - quantity
      type: object
    asset_history:
      example:
      - tx_hash: 2dd15e0ef6e6a17841cb9541c27724072ce4d4b79b91e58432fbaa32d9572531
        amount: "10"
        action: minted
      - tx_hash: 9c190bc1ac88b2ab0c05a82d7de8b71b67a9316377e865748a89d4426c0d3005
        amount: "5"
        action: burned
      - tx_hash: 1a0570af966fb355a7160e4f82d5a80b8681b7955f5d44bec0dde628516157f0
        amount: "5"
        action: burned
      items:
        properties:
          tx_hash:
            description: Hash of the transaction containing the asset action
            type: string
          action:
            description: Action executed upon the asset policy
            enum:
            - minted
            - burned
            type: string
          amount:
            description: Asset amount of the specific action
            type: string
        required:
        - action
        - amount
        - tx_hash
        type: object
      type: array
    asset_txs:
      example:
      - 8788591983aa73981fc92d6cddbbe643959f5a784e84b8bee0db15823f575a5b
      - 52e748c4dec58b687b90b0b40d383b9fe1f24c1a833b7395cdf07dd67859f46f
      - e8073fd5318ff43eca18a852527166aa8008bee9ee9e891f585612b7e4ba700b
      items:
        description: Hash of the transaction
        type: string
      type: array
    asset_addresses:
      example:
      - address: addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz
        quantity: "1"
      - address: addr1qyhr4exrgavdcn3qhfcc9f939fzsch2re5ry9cwvcdyh4x4re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qdpvhza
        quantity: "100000"
      - address: addr1q8zup8m9ue3p98kxlxl9q8rnyan8hw3ul282tsl9s326dfj088lvedv4zckcj24arcpasr0gua4c5gq4zw2rpcpjk2lq8cmd9l
        quantity: "18605647"
      items:
        properties:
          address:
            description: Address containing the specific asset
            type: string
          quantity:
            description: Asset quantity on the specific address
            type: string
        required:
        - address
        - quantity
        type: object
      type: array
    asset_policy:
      example:
      - asset: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
        quantity: "1"
      - asset: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a766e
        quantity: "100000"
      - asset: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb574636f696e
        quantity: "18605647"
      items:
        properties:
          asset:
            description: Concatenation of the policy_id and hex-encoded asset_name
            type: string
          quantity:
            description: Current asset quantity
            type: string
        required:
        - asset
        - quantity
        type: object
      type: array
    metrics:
      example:
      - - date: 1612543884
          calls: 42
        - date: 1614523884
          calls: 6942
      items:
        properties:
          time:
            description: Starting time of the call count interval (ends midnight UTC)
              in UNIX time
            type: integer
          calls:
            description: Sum of all calls for a particular day
            type: integer
        required:
        - calls
        - time
        type: object
      type: array
    metrics_endpoints:
      example:
      - - date: 1612543814
          calls: 182
          endpoint: block
        - date: 1612543814
          calls: 42
          endpoint: epoch
        - date: 1612543812
          calls: 775
          endpoint: block
        - date: 1612523884
          calls: 4
          endpoint: epoch
        - date: 1612553884
          calls: 89794
          endpoint: block
      items:
        properties:
          time:
            description: Starting time of the call count interval (ends midnight UTC)
              in UNIX time
            type: integer
          calls:
            description: Sum of all calls for a particular day and endpoint
            type: integer
          endpoint:
            description: Endpoint parent name
            type: string
        required:
        - calls
        - endpoint
        - time
        type: object
      type: array
    empty_object:
      type: object
    inline_response_200:
      example:
        version: 0.1.0
        url: https://blockfrost.io/
      properties:
        url:
          example: https://blockfrost.io/
          type: string
        version:
          example: 0.1.0
          type: string
      required:
      - url
      - version
      type: object
    inline_response_400:
      properties:
        status_code:
          example: 400
          type: integer
        error:
          example: Bad Request
          type: string
        message:
          example: Backend did not understand your request.
          type: string
      type: object
    inline_response_403:
      properties:
        status_code:
          example: 403
          type: integer
        error:
          example: Forbidden
          type: string
        message:
          example: Invalid project token.
          type: string
      type: object
    inline_response_418:
      properties:
        status_code:
          example: 418
          type: integer
        error:
          example: Requested Banned
          type: string
        message:
          example: IP has been auto-banned for flooding.
          type: string
      type: object
    inline_response_429:
      properties:
        status_code:
          example: 429
          type: integer
        error:
          example: Project Over Limit
          type: string
        message:
          example: Usage is over limit.
          type: string
      type: object
    inline_response_500:
      properties:
        status_code:
          example: 505
          type: integer
        error:
          example: Internal Server Error
          type: string
        message:
          example: An unexpected response was received from the backend.
          type: string
      type: object
    inline_response_200_1:
      example:
        is_healthy: true
      properties:
        is_healthy:
          example: true
          type: boolean
      type: object
    inline_response_200_2:
      example:
        server_time: 1603400958947
      properties:
        server_time:
          example: 1603400958947
          type: integer
      type: object
    inline_response_404:
      properties:
        status_code:
          example: 404
          type: integer
        error:
          example: Not Found
          type: string
        message:
          example: The requested component has not been found.
          type: string
      type: object
    inline_response_200_3:
      example:
        ipfs_hash: QmZbHqiCxKEVX7QfijzJTkZiSi3WEVTcvANgNAWzDYgZDr
        size: 125297
        name: README.md
      properties:
        name:
          description: Name of the file
          example: README.md
          type: string
        ipfs_hash:
          description: IPFS hash of the file
          example: QmZbHqiCxKEVX7QfijzJTkZiSi3WEVTcvANgNAWzDYgZDr
          type: string
        size:
          description: Size of the file
          example: 125297
          type: integer
      required:
      - ipfs_hash
      - name
      - size
      type: object
    inline_response_200_4:
      example:
        ipfs_hash: QmPojRfAXYAXV92Dof7gtSgaVuxEk64xx9CKvprqu9VwA8
        state: queued
      properties:
        ipfs_hash:
          description: IPFS hash of the pinned object
          example: QmPojRfAXYAXV92Dof7gtSgaVuxEk64xx9CKvprqu9VwA8
          type: string
        state:
          description: State of the pin action
          enum:
          - queued|pinned|unpinned|failed|gc
          example: queued
          type: string
      type: object
    inline_response_200_5:
      example:
        ipfs_hash: QmdVMnULrY95mth2XkwjxDtMHvzuzmvUPTotKE1tgqKbCx
        size: "1615551024"
        time_created: 1615551024
        state: pinned
        time_pinned: 1615551024
      properties:
        time_created:
          description: Creation time of the IPFS object on our backends
          example: 1615551024
          type: integer
        time_pinned:
          description: Pin time of the IPFS object on our backends
          example: 1615551024
          type: integer
        ipfs_hash:
          description: IPFS hash of the pinned object
          example: QmdVMnULrY95mth2XkwjxDtMHvzuzmvUPTotKE1tgqKbCx
          type: string
        size:
          description: Size of the object in Bytes
          example: "1615551024"
          type: string
        state:
          description: "State of the pinned object, which is `queued` when we are\
            \ retriving object. If this\nis successful the state is changed to `pinned`\
            \ or `failed` if not. The state `gc` means the\npinned item has been garbage\
            \ collected due to account being over storage quota or after it has\n\
            been moved to `unpinned` state by removing the object pin.\n"
          enum:
          - queued|pinned|unpinned|failed|gc
          example: pinned
          type: string
      type: object
    inline_response_200_6:
      example:
        ipfs_hash: QmdVMnULrY95mth2XkwjxDtMHvzuzmvUPTotKE1tgqKbCx
        size: "1615551024"
        time_created: 1615551024
        state: pinned
        time_pinned: 1615551024
      properties:
        time_created:
          description: Time of the creation of the IPFS object on our backends
          example: 1615551024
          type: integer
        time_pinned:
          description: Time of the pin of the IPFS object on our backends
          example: 1615551024
          type: integer
        ipfs_hash:
          description: IPFS hash of the pinned object
          example: QmdVMnULrY95mth2XkwjxDtMHvzuzmvUPTotKE1tgqKbCx
          type: string
        size:
          description: Size of the object in Bytes
          example: "1615551024"
          type: string
        state:
          description: "State of the pinned object. We define 5 states: `queued`,\
            \ `pinned`, `unpinned`, `failed`, `gc`.\nWhen the object is pending retrieval\
            \ (i.e. after `/ipfs/pin/add/{IPFS_path}`), the state is `queued`.\nIf\
            \ the object is already successfully retrieved, state is changed to `pinned`\
            \ or `failed` otherwise.\nWhen object is unpinned (i.e. after `/ipfs/pin/remove/{IPFS_path}`)\
            \ it is marked for garbage collection.\nState `gc` means that a previously\
            \ `unpinned` item has been garbage collected due to account being over\
            \ storage quota.\n"
          enum:
          - queued|pinned|unpinned|failed|gc
          example: pinned
          type: string
      type: object
    inline_response_200_7:
      example:
        ipfs_hash: QmPojRfAXYAXV92Dof7gtSgaVuxEk64xx9CKvprqu9VwA8
        state: unpinned
      properties:
        ipfs_hash:
          description: IPFS hash of the pinned object
          example: QmPojRfAXYAXV92Dof7gtSgaVuxEk64xx9CKvprqu9VwA8
          type: string
        state:
          description: State of the pin action
          enum:
          - queued|pinned|unpinned|failed|gc
          example: unpinned
          type: string
      type: object
    tx_content_output_amount:
      description: The sum of all the UTXO per asset
      properties:
        unit:
          description: The unit of the value
          format: Lovelace or concatenation of asset policy_id and hex-encoded asset_name
          type: string
        quantity:
          description: The quantity of the unit
          type: string
      type: object
    tx_content_utxo_inputs:
      example:
        amount:
        - unit: lovelace
          quantity: "42000000"
        - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
          quantity: "12"
        address: addr1q9ld26v2lv8wvrxxmvg90pn8n8n5k6tdst06q2s856rwmvnueldzuuqmnsye359fqrk8hwvenjnqultn7djtrlft7jnq7dy7wv
      properties:
        address:
          description: Input address
          example: addr1q9ld26v2lv8wvrxxmvg90pn8n8n5k6tdst06q2s856rwmvnueldzuuqmnsye359fqrk8hwvenjnqultn7djtrlft7jnq7dy7wv
          type: string
        amount:
          example:
          - unit: lovelace
            quantity: "42000000"
          - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
            quantity: "12"
          items:
            $ref: '#/components/schemas/tx_content_output_amount'
          type: array
      required:
      - address
      - amount
      type: object
    tx_content_utxo_outputs:
      example:
        amount:
        - unit: lovelace
          quantity: "42000000"
        - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
          quantity: "12"
        address: addr1q9ld26v2lv8wvrxxmvg90pn8n8n5k6tdst06q2s856rwmvnueldzuuqmnsye359fqrk8hwvenjnqultn7djtrlft7jnq7dy7wv
      properties:
        address:
          description: Output address
          example: addr1q9ld26v2lv8wvrxxmvg90pn8n8n5k6tdst06q2s856rwmvnueldzuuqmnsye359fqrk8hwvenjnqultn7djtrlft7jnq7dy7wv
          type: string
        amount:
          example:
          - unit: lovelace
            quantity: "42000000"
          - unit: b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e
            quantity: "12"
          items:
            $ref: '#/components/schemas/tx_content_output_amount'
          type: array
      required:
      - address
      - amount
      type: object
    tx_content_pool_certs_metadata:
      example:
        ticker: NUTS
        name: Stake Nuts
        description: The best pool ever
        url: https://stakenuts.com/mainnet.json
        hash: 47c0c68cb57f4a5b4a87bad896fc274678e7aea98e200fa14a1cb40c0cab1d8c
        homepage: https://stakentus.com/
      nullable: true
      properties:
        url:
          description: URL to the stake pool metadata
          example: https://stakenuts.com/mainnet.json
          nullable: true
          type: string
        hash:
          description: Hash of the metadata file
          example: 47c0c68cb57f4a5b4a87bad896fc274678e7aea98e200fa14a1cb40c0cab1d8c
          nullable: true
          type: string
        ticker:
          description: Ticker of the stake pool
          example: NUTS
          nullable: true
          type: string
        name:
          description: Name of the stake pool
          example: Stake Nuts
          nullable: true
          type: string
        description:
          description: Description of the stake pool
          example: The best pool ever
          nullable: true
          type: string
        homepage:
          description: Home page of the stake pool
          example: https://stakentus.com/
          nullable: true
          type: string
      required:
      - description
      - hash
      - homepage
      - name
      - ticker
      - url
      type: object
    tx_content_pool_certs_relays:
      example:
        ipv4: 4.4.4.4
        dns_srv: _relays._tcp.relays.stakenuts.com
        port: 3001
        ipv6: https://stakenuts.com/mainnet.json
        dns: relay1.stakenuts.com
      properties:
        ipv4:
          description: IPv4 address of the relay
          example: 4.4.4.4
          nullable: true
          type: string
        ipv6:
          description: IPv6 address of the relay
          example: https://stakenuts.com/mainnet.json
          nullable: true
          type: string
        dns:
          description: DNS name of the relay
          example: relay1.stakenuts.com
          nullable: true
          type: string
        dns_srv:
          description: DNS SRV entry of the relay
          example: _relays._tcp.relays.stakenuts.com
          nullable: true
          type: string
        port:
          description: Network port of the relay
          example: 3001
          type: integer
      required:
      - dns
      - dns_srv
      - ipv4
      - ipv6
      - port
      type: object
    asset_metadata:
      example:
        ticker: nutc
        name: nutcoin
        description: The Nut Coin
        logo: iVBORw0KGgoAAAANSUhEUgAAADAAAAAoCAYAAAC4h3lxAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH5QITCDUPjqwFHwAAB9xJREFUWMPVWXtsU9cZ/8499/r6dZ3E9rUdO7ZDEgglFWO8KaOsJW0pCLRKrN1AqqYVkqoqrYo0ja7bpElru1WairStFKY9WzaE1E1tx+jokKqwtqFNyhKahEJJyJNgJ37E9r1+3HvO/sFR4vhx7SBtfH/F3/l93/f7ne/4PBxEKYU72dj/ZfH772v1TU+HtqbTaX8wOO01GPQpRVH7JEm+vGHDuq6z7/8jUSoHKtaBKkEUFUXdajDy1hUrmrs6zn/wWS7m7pZVjMUirKGUTnzc+e9xLcTrPPVfZzDz06Sc2lyQGEIyAPzT7Xa+dvE/3e+XLaCxoflHsVj8MAAYs74aa/WHoenwvpkZKeFy2Z5NJlOPUkqXZccFwSSrKjlyffjLH+TL6XTUGTGL/6hklD3ldIrj2M5MRmkLBMcvaRLQ1Nj88sxM/HCBfMP+eu/OYGDqe6l0WmpoqJ/88upgrU7HrQNA/cFg6MlkKiLlBtVUO40cx54BgHvLIT/HJLvdeqh/4NKxogKWN7fsCoUi7xTLxLJ4vLq6ak//wKVOrdXtttrTDMPsqJA8AAAwDErdu3VL3alTf5ma9eWCpoKhn5dKpCiqJxicPucQPVu0FHaInn35yHMcKwPAa4SQ3QCwFgDWUko3qSr5vqqSgTypuEg4Mo/zvA74/Y0rZSnZU8akSHV17k2fXfy0txjI5224kEym1s/1EUI7LBbztweHrkzkizn49LP6U6feepFSeggAQK/n04SQZ8bGrxdeQjZrbRvGzLH5hcibRqOhPplMfS1fIY5jz4xPDBdcGggho2h3z9sOLRazdG3wqp9SMgUlzGZ17SSEPsRx7J8CwfGu3PF57WhqqjfN/VxVJUxKUrIdITAXKpDJKFscosdfaFy0u+/K9aXTmXe0kAcAmA5Nng5Hbj6Tj/wCAYFAcN7uEY3GXGazMSHLqVVFapgBoMPna9yqhRAAgCTJMa3YUjZPgNFkSlWYx5eUkx+0tKx83V3rF+cVYJjruWCe133DIXqMmrNrFSDabRcWkywYmG5XFOW6aHcfb9324CoAgMmbo9MIoXkneCajiAihV/c/8eSiBSw4BxyiZxQA6m7H7FBKT2CMn2MY5jFFUX6ZO+5w2j8aHZ7YH40FByrJD5DnHGAY5uTtIA8AgBDaR4F2Yxb3WizCgmtA4ObUPSazodduqz3Suu0hf0U1cjvgdNSJ1dWWveFwdDUAtAiC2Uopdcdi8c9Zlh3GmDGl05mtAKAvo47EcdwThJCjqqpWFxALlNITomg73tff21GRAJez7iVK4WGGYfoJIQduBsbm7UrLm1ueCoUiv65kpiilw1ZbzcFoZOYoIcRTAn6eYZgXJm+Oni+Vd3YJbdyweSch9HlK6SpVVfcyDDq7Yf3m2XPBIXraKyV/a4b9UkLawbLsZgB4rwR8CyGkw13r+5fX27BckwBAEJ47oKpk8+DgUIdod7fV1vqOAMDrlZLPmqKoB+rrvXIgOP6w0WjYy3Ls5RL4bUk52bVm9fqnCk7M3CXU2ND8+MxM7BcIIftiyRYyntcdHh0bmr0wfmXl6p2SJB2KRmP3l4j7zejYUFtRAQAAgslm1Bv4nyGEDpYiIwjmjw0G/RjP866JiclNqqqWfKLq9fyZkdHBBXcnl9O71GDgD8bj0ncRQqZ8sRgzL9yYHH2pqICsOUTPLgA4CXNeZFmzWIS/YhYfjUZmvqPjuceSckrz25pS2h2cmlhbaBwhzr6kfsnL8Xhif55YYFl23Y3Jkdl7EVMoUSA4/q6qqNsBIPd11e52u45FwtG3CSH7yiEPAGC1Vt9dXGBmanDoygFLlbAjtzZCCMyC6VeaOpA1l9N7l1kwtauKaozHE28YTQaQpeR7+TqjxXheR0fHhhgt2CX1S3clEtKC16HL5djYe+niBU0CcmYA2W21/Qih5ZqDcoxlMZ24MaJJAABA87IVJ8Lh6N65Pr1B/+LIyLUfAhRZQvnM6ah7ZDHkAQB0vK6/HHxNTc2ruT5Zkldn/y5LACFk+2LIAwAwCGl6yGSt88KHXbmrBCHkqEgAz+vWLFZALJb4qNwYhFDhCSknkSwnQ4sVgDFeWg7+gQe2r1tAmkGTFQlACHWVg89nhJA9ot3dphV/eeCLp/Pw6K5IQP0S39uLFXCLwDG7zf1cKZxD9LSlUunHc/12u/2t2Vzl/rzu8zb8PZlM7bwdQgDgPK/nX2nddt+53//ht3LW2dS0fF0iLj2vquojuQFmwXRucPBKa8UCmpe1iOFwpAsAfLdJBFBKwVIlXJ2JxqKCxbwyHkvoCkAlv9/71U+7Oq+UJWDZ0hViJBL1cRynbNq0sSeeiPl6ei4NqIqq6TSmlB7X6bjuTEY5pgWfzwxGPZhMpt39/b3vzvWXFGCzulZjjM/DrauDwcAr8bjcgzGjZUuVBMH8k2uDX7wCAFDr8n2LEPI7SqmhTP6SzVbz6MDlz0/nDpT8EmOM22HOvUeWU2wp8iyLgRL6hk7Hrc2SBwC4MTlykmXZRozxn00mbVcphNA5jJmV+chr6oDd5l6jN/A/TqfSuwEAGITGMIsvGo3GTwTB3Dc2NjGSxdZYq4VIOOoNBANnKE0XPXE3brjHOTQ08k2MmVZOxzVJCbkFIQSCYEphzPaFQuGzTpfjb319PZ8UFXin/5OvrHPg/9HueAH/BSUqOuNZm4fyAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIxLTAyLTE5VDA4OjUyOjI1KzAwOjAwCmFGlgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMS0wMi0xOVQwODo1MjoyMyswMDowMBjsyxAAAAAASUVORK5CYII=
        url: https://www.stakenuts.com/
      nullable: true
      properties:
        name:
          description: Asset name
          example: nutcoin
          type: string
        description:
          description: Asset description
          example: The Nut Coin
          type: string
        ticker:
          example: nutc
          nullable: true
          type: string
        url:
          description: Asset website
          example: https://www.stakenuts.com/
          nullable: true
          type: string
        logo:
          description: Base64 encoded logo of the asset
          example: iVBORw0KGgoAAAANSUhEUgAAADAAAAAoCAYAAAC4h3lxAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH5QITCDUPjqwFHwAAB9xJREFUWMPVWXtsU9cZ/8499/r6dZ3E9rUdO7ZDEgglFWO8KaOsJW0pCLRKrN1AqqYVkqoqrYo0ja7bpElru1WairStFKY9WzaE1E1tx+jokKqwtqFNyhKahEJJyJNgJ37E9r1+3HvO/sFR4vhx7SBtfH/F3/l93/f7ne/4PBxEKYU72dj/ZfH772v1TU+HtqbTaX8wOO01GPQpRVH7JEm+vGHDuq6z7/8jUSoHKtaBKkEUFUXdajDy1hUrmrs6zn/wWS7m7pZVjMUirKGUTnzc+e9xLcTrPPVfZzDz06Sc2lyQGEIyAPzT7Xa+dvE/3e+XLaCxoflHsVj8MAAYs74aa/WHoenwvpkZKeFy2Z5NJlOPUkqXZccFwSSrKjlyffjLH+TL6XTUGTGL/6hklD3ldIrj2M5MRmkLBMcvaRLQ1Nj88sxM/HCBfMP+eu/OYGDqe6l0WmpoqJ/88upgrU7HrQNA/cFg6MlkKiLlBtVUO40cx54BgHvLIT/HJLvdeqh/4NKxogKWN7fsCoUi7xTLxLJ4vLq6ak//wKVOrdXtttrTDMPsqJA8AAAwDErdu3VL3alTf5ma9eWCpoKhn5dKpCiqJxicPucQPVu0FHaInn35yHMcKwPAa4SQ3QCwFgDWUko3qSr5vqqSgTypuEg4Mo/zvA74/Y0rZSnZU8akSHV17k2fXfy0txjI5224kEym1s/1EUI7LBbztweHrkzkizn49LP6U6feepFSeggAQK/n04SQZ8bGrxdeQjZrbRvGzLH5hcibRqOhPplMfS1fIY5jz4xPDBdcGggho2h3z9sOLRazdG3wqp9SMgUlzGZ17SSEPsRx7J8CwfGu3PF57WhqqjfN/VxVJUxKUrIdITAXKpDJKFscosdfaFy0u+/K9aXTmXe0kAcAmA5Nng5Hbj6Tj/wCAYFAcN7uEY3GXGazMSHLqVVFapgBoMPna9yqhRAAgCTJMa3YUjZPgNFkSlWYx5eUkx+0tKx83V3rF+cVYJjruWCe133DIXqMmrNrFSDabRcWkywYmG5XFOW6aHcfb9324CoAgMmbo9MIoXkneCajiAihV/c/8eSiBSw4BxyiZxQA6m7H7FBKT2CMn2MY5jFFUX6ZO+5w2j8aHZ7YH40FByrJD5DnHGAY5uTtIA8AgBDaR4F2Yxb3WizCgmtA4ObUPSazodduqz3Suu0hf0U1cjvgdNSJ1dWWveFwdDUAtAiC2Uopdcdi8c9Zlh3GmDGl05mtAKAvo47EcdwThJCjqqpWFxALlNITomg73tff21GRAJez7iVK4WGGYfoJIQduBsbm7UrLm1ueCoUiv65kpiilw1ZbzcFoZOYoIcRTAn6eYZgXJm+Oni+Vd3YJbdyweSch9HlK6SpVVfcyDDq7Yf3m2XPBIXraKyV/a4b9UkLawbLsZgB4rwR8CyGkw13r+5fX27BckwBAEJ47oKpk8+DgUIdod7fV1vqOAMDrlZLPmqKoB+rrvXIgOP6w0WjYy3Ls5RL4bUk52bVm9fqnCk7M3CXU2ND8+MxM7BcIIftiyRYyntcdHh0bmr0wfmXl6p2SJB2KRmP3l4j7zejYUFtRAQAAgslm1Bv4nyGEDpYiIwjmjw0G/RjP866JiclNqqqWfKLq9fyZkdHBBXcnl9O71GDgD8bj0ncRQqZ8sRgzL9yYHH2pqICsOUTPLgA4CXNeZFmzWIS/YhYfjUZmvqPjuceSckrz25pS2h2cmlhbaBwhzr6kfsnL8Xhif55YYFl23Y3Jkdl7EVMoUSA4/q6qqNsBIPd11e52u45FwtG3CSH7yiEPAGC1Vt9dXGBmanDoygFLlbAjtzZCCMyC6VeaOpA1l9N7l1kwtauKaozHE28YTQaQpeR7+TqjxXheR0fHhhgt2CX1S3clEtKC16HL5djYe+niBU0CcmYA2W21/Qih5ZqDcoxlMZ24MaJJAABA87IVJ8Lh6N65Pr1B/+LIyLUfAhRZQvnM6ah7ZDHkAQB0vK6/HHxNTc2ruT5Zkldn/y5LACFk+2LIAwAwCGl6yGSt88KHXbmrBCHkqEgAz+vWLFZALJb4qNwYhFDhCSknkSwnQ4sVgDFeWg7+gQe2r1tAmkGTFQlACHWVg89nhJA9ot3dphV/eeCLp/Pw6K5IQP0S39uLFXCLwDG7zf1cKZxD9LSlUunHc/12u/2t2Vzl/rzu8zb8PZlM7bwdQgDgPK/nX2nddt+53//ht3LW2dS0fF0iLj2vquojuQFmwXRucPBKa8UCmpe1iOFwpAsAfLdJBFBKwVIlXJ2JxqKCxbwyHkvoCkAlv9/71U+7Oq+UJWDZ0hViJBL1cRynbNq0sSeeiPl6ei4NqIqq6TSmlB7X6bjuTEY5pgWfzwxGPZhMpt39/b3vzvWXFGCzulZjjM/DrauDwcAr8bjcgzGjZUuVBMH8k2uDX7wCAFDr8n2LEPI7SqmhTP6SzVbz6MDlz0/nDpT8EmOM22HOvUeWU2wp8iyLgRL6hk7Hrc2SBwC4MTlykmXZRozxn00mbVcphNA5jJmV+chr6oDd5l6jN/A/TqfSuwEAGITGMIsvGo3GTwTB3Dc2NjGSxdZYq4VIOOoNBANnKE0XPXE3brjHOTQ08k2MmVZOxzVJCbkFIQSCYEphzPaFQuGzTpfjb319PZ8UFXin/5OvrHPg/9HueAH/BSUqOuNZm4fyAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIxLTAyLTE5VDA4OjUyOjI1KzAwOjAwCmFGlgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMS0wMi0xOVQwODo1MjoyMyswMDowMBjsyxAAAAAASUVORK5CYII=
          nullable: true
          type: string
      required:
      - description
      - name
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: project_id
      type: apiKey

