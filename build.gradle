import com.vladsch.flexmark.ast.Document
import com.vladsch.flexmark.html.HtmlRenderer
import com.vladsch.flexmark.parser.Parser

buildscript {
    apply plugin: 'groovy'

    repositories {
        mavenLocal()
        mavenCentral()
        dependencies {
            classpath group: 'com.vladsch.flexmark', name: 'flexmark', version: '0.28.12'
        }
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'org.jetbrains.intellij.platform' version '2.1.0'
    id "org.jetbrains.kotlin.jvm" version "1.9.25"
    id "org.jetbrains.grammarkit" version "2022.3.2.2"
}

apply plugin: "kotlin"

group 'com.bloxbean'
version '0.2.0-beta2'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    intellijPlatform {
        defaultRepositories()
    }
}

compileJava {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

dependencies {
    intellijPlatform {
        intellijIdeaCommunity("2024.2")
//        pycharmProfessional("2024.2")
        plugin("com.redhat.devtools.lsp4ij:0.5.0")
        pluginVerifier()
        zipSigner()
        instrumentationTools()
    }

    implementation fileTree(include: ['*.jar'], dir: 'lib')
    implementation('com.bloxbean.cardano:cardano-client-lib:0.6.2') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    implementation('com.bloxbean.cardano:cardano-client-backend-blockfrost:0.6.2') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'com.bloxbean.cardano', module: 'cardano-client-lib'
    }
    implementation('com.bloxbean.cardano:cardano-client-backend-koios:0.6.2') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'com.bloxbean.cardano', module: 'cardano-client-lib'
    }
    implementation('com.moandjiezana.toml:toml4j:0.7.2')
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.10")

    implementation 'org.json:json:20240303'

    compileOnly 'org.projectlombok:lombok:1.18.34'

    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.3'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.mockito:mockito-inline:4.6.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'
    testImplementation('org.assertj:assertj-core:3.23.1')
    testRuntimeOnly 'org.slf4j:slf4j-log4j12:1.7.36'
}

sourceSets.main.java.srcDirs('src/main/gen', 'src/main/idea')

String changeLogAsHtml() {
    Parser parser = Parser.builder().build()
    HtmlRenderer renderer = HtmlRenderer.builder().build()
    Document changeLogDocument = parser.parse(new File(rootProject.uri('CHANGELOG.md')).text)
    renderer.render(changeLogDocument)
}

grammarKit {
    jflexRelease = "1.7.0-1"
    grammarKitRelease = "2021.1.2"
    generateLexer {
        sourceFile = file('src/main/java/com/bloxbean/intelliada/idea/aiken/lang/grammar/_AikenLexer.flex')
        targetOutputDir = file('src/main/gen/com/bloxbean/intelliada/idea/aiken/lang')
    }

    generateParser {
        sourceFile = file('src/main/java/com/bloxbean/intelliada/idea/aiken/lang/grammar/Aiken.bnf')
        targetRootOutputDir = file('src/main/gen')
        pathToParser = 'com/bloxbean/intelliada/idea/aiken/lang/parser'
        pathToPsiRoot = 'com/bloxbean/intelliada/idea/aiken/lang/psi'
    }
}

patchPluginXml {
    changeNotes = changeLogAsHtml()
    sinceBuild = "242"
    untilBuild = provider {null}
}
